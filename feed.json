{
    "version": "https://jsonfeed.org/version/1",
    "title": "人生当苦, 良人当归",
    "subtitle": "",
    "icon": "https://fairyeye.github.io/images/favicon.ico",
    "description": "我不过像你像他像那野草野花。",
    "home_page_url": "https://fairyeye.github.io",
    "items": [
        {
            "id": "https://fairyeye.github.io/2023/08/21/230923/",
            "url": "https://fairyeye.github.io/2023/08/21/230923/",
            "title": "",
            "date_published": "2023-08-21T01:37:07.566Z",
            "content_html": "<h3 id=\"pur-23920\"><a class=\"anchor\" href=\"#pur-23920\">#</a> pur-23920</h3>\n<p>QB: SCUX_LOTUSEU_QUERY_SUM_ADVANCE_PAYMENT_AMOUNT<br />\n 埋点：SPUC_PO_ADVANCE_PAYMENT_AMOUNT_AFTER</p>\n<h3 id=\"pur-23503\"><a class=\"anchor\" href=\"#pur-23503\">#</a> pur-23503</h3>\n<p>API + 独立脚本：SCUX_LOTUSNYO_CREATE_PREPAYMENT_BY_ORDER</p>\n<p>返回消息：<br />\nscux.spuc.lotusnyo_po_is_not_confirmed_or_not_closed<br />\nscux.spuc.lotusnyo_po_is_not_found</p>\n<h3 id=\"pur-22253\"><a class=\"anchor\" href=\"#pur-22253\">#</a> pur-22253</h3>\n<h3 id=\"pur-21898\"><a class=\"anchor\" href=\"#pur-21898\">#</a> pur-21898</h3>\n<h3 id=\"pur-23010\"><a class=\"anchor\" href=\"#pur-23010\">#</a> pur-23010</h3>\n<p>// 查询后置脚本：SPUC_ORDER_LINE_DETAIL<br />\nattachmentSize<br />\nQB：SCUX_MARKOR_QUERY_ATTACHMENT_SIZE_BY_ITEM_ID<br />\nSCUX_MARKOR_QUERY_ITEM_BY_PO_LINE</p>\n<p>API + 独立脚本：SCUX_MARKOR_ATTACHMENT_BATCH_DOWNLOAD</p>\n<p>返回消息：scux.spuc.markor_no_attachment_download</p>\n<h3 id=\"pur-23788\"><a class=\"anchor\" href=\"#pur-23788\">#</a> pur-23788</h3>\n<p>值集：  SCUX.SPUC.JIULI_QUERY_CONFIRMED_ORDER<br />\n 值集视图：  SCUX.SPUC.JIULI_QUERY_CONFIRMED_ORDER</p>\n<h3 id=\"pur-22490\"><a class=\"anchor\" href=\"#pur-22490\">#</a> pur-22490</h3>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/08/24/3c1195c6f528ac8c.png\" alt=\"\" /></p>\n<h3 id=\"pur-24324\"><a class=\"anchor\" href=\"#pur-24324\">#</a> pur-24324</h3>\n<p>SPUC_ORDER_BATCH_SUBMIT_HANDLE<br />\nQB：SCUX_ISIMCERE_QUERY_EMPLOYEE_BY_USER_ID<br />\n 返回消息：scux.isimcere.spuc.submit_error_pr_request_by</p>\n<h3 id=\"pur-24217\"><a class=\"anchor\" href=\"#pur-24217\">#</a> pur-24217</h3>\n<p>配置表：scux_srm_carlsberg_carlsberg_po_attachment_mult<br />\n 埋点：SPUC_ORDER_SYNC_IMP_INSERT_PROCESS<br />\n 值集：SCUX.CARLSBERG.LANGUAGE<br />\n 编码规则：SCUX.CARLSBERG_ATTACHMENT_VER</p>\n<p>动作脚本：配置表关联动作脚本</p>\n<h3 id=\"pur-24216\"><a class=\"anchor\" href=\"#pur-24216\">#</a> pur-24216</h3>\n<p>配置表：scux_srm_carlsberg_order_description_maintenance<br />\nscux_srm_carlsberg_order_description</p>\n<p>埋点：SPUC_ORDER_SYNC_IMP_INSERT_PROCESS、SPUC_SUBMIT_PO、SCUX_MTC_PO_HEADER_INFO</p>\n<h3 id=\"pur-24191\"><a class=\"anchor\" href=\"#pur-24191\">#</a> pur-24191</h3>\n<p>埋点：SPUC_SUBMIT_PO<br />\n 返回消息：scux.error.supplier_is_not_enabled<br />\n 来源：自动转单提交？ERP 来源？<br />\n报错：【PO001】采购组织在供应商主数据中已冻结或未拓展，请调整后重试<br />\n待确定：接口报错、接口没查到、参数为空等</p>\n<h3 id=\"pur-24244\"><a class=\"anchor\" href=\"#pur-24244\">#</a> pur-24244</h3>\n<p>API + 独立脚本：SCUX_KBYK_UPDATE_PO_LOCATION_ATTACHMENT</p>\n<h3 id=\"pur-23989\"><a class=\"anchor\" href=\"#pur-23989\">#</a> pur-23989</h3>\n<p>QB：SCUX_MARUBI_QUERY_EMPLOYEEBY_USER、SCUX_MARUBI_QUERY_PO_LINE<br />\n 独立脚本：SCUX_MARUBI_CREATE_CHARGE_BY_PO_JOB<br />\nJOB: SCUX_MARUBI_CREATE_CHARGE_PO</p>\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/07/18/230819/",
            "url": "https://fairyeye.github.io/2023/07/18/230819/",
            "title": "",
            "date_published": "2023-07-18T01:22:42.269Z",
            "content_html": "<hr />\n<hr />\n<h3 id=\"pur-\"><a class=\"anchor\" href=\"#pur-\">#</a> PUR-</h3>\n<h3 id=\"pur-21898\"><a class=\"anchor\" href=\"#pur-21898\">#</a> PUR-21898</h3>\n<h4 id=\"spucresource\"><a class=\"anchor\" href=\"#spucresource\">#</a> spuc，resource</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update sodr_po_header set settle_pe_supplier = concat(ifnull(settle_supplier_id,&#x27;null&#x27;),&#x27;-&#x27;,ifnull(settle_erp_supplier_id,&#x27;null&#x27;)) where (settle_supplier_id is not null or settle_erp_supplier_id is not null);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">select count(1) from sodr_po_header where (settle_supplier_id is not null or settle_erp_supplier_id is not null); -- 178826</span><br><span class=\"line\">select count(1) from sodr_po_header;-- 9596554</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pur-21731\"><a class=\"anchor\" href=\"#pur-21731\">#</a> PUR-21731</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. subErpSupplierId: 277766</span><br><span class=\"line\">2. subErpSupplierName: &quot;协议本&quot;</span><br><span class=\"line\">3. subSupplierCode: &quot;CO00024895&quot;</span><br><span class=\"line\">4. subSupplierFlag: 0</span><br><span class=\"line\">5. subSupplierId: 1089712</span><br><span class=\"line\">6. subSupplierName: &quot;协议平台供应商1&quot;</span><br><span class=\"line\">7. supplierCompanyId: &quot;__-gYSNy2v7rnwsDtO5_UGeMA-__&quot;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"pur-21731-2\"><a class=\"anchor\" href=\"#pur-21731-2\">#</a> pur-21731</h5>\n<pre><code>批量编辑\n</code></pre>\n<h4 id=\"种子数据\"><a class=\"anchor\" href=\"#种子数据\">#</a> 种子数据</h4>\n<p>值集：SODR.PO_TABLE_FIELD<br />\n 配置表：sodr_po_config_init<br />\n 代码：</p>\n<h3 id=\"pur-22219\"><a class=\"anchor\" href=\"#pur-22219\">#</a> PUR-22219</h3>\n<p>前置：SPUC_PCI_PO_HEADER_CONFIRM_DETAIL</p>\n<p>返回消息：error.pci.confirm_order_attchment_is_empty</p>\n<h3 id=\"pur-22269\"><a class=\"anchor\" href=\"#pur-22269\">#</a> PUR-22269</h3>\n<p>埋点：SPUC_ORDER_LINE_IMPORT<br />\nSPUC_ORDER_PRICE_SOURCE_TYPE</p>\n<h3 id=\"pur-21594\"><a class=\"anchor\" href=\"#pur-21594\">#</a> PUR-21594</h3>\n<p>值集：SCUX.CHAM_CONFIDENTIAL_DOCUMENT_LEVEL<br />\n 埋点：SPUC_ORDER_PRICE_SOURCE_TYPE</p>\n<h3 id=\"pur-22034\"><a class=\"anchor\" href=\"#pur-22034\">#</a> pur-22034</h3>\n<p>独立脚本：SCUX_INOV_QUERY_QUANTITY_BY_COMPANY_ITEM<br />\nAPI：SCUX_INOV_QUERY_QUANTITY_BY_COMPANY_ITEM<br />\nQB：SCUX_INOV_QUERY_QUANTITY_BY_COMPANY_ITEM</p>\n<h3 id=\"pur-22249\"><a class=\"anchor\" href=\"#pur-22249\">#</a> PUR-22249</h3>\n<p>标准代码埋点：feature-pur-22249<br />\n 适配器：<br />\n提交：SPUC_SUBMIT_PO,SPUC_AFTER_SUBMIT_PO<br />\n 行取消联动头：SPUC_LINE_CANCEL_PO_HEADER<br />\n 电商行取消联动头：SPUC_LINE_CANCEL_PO_HEADER<br />\n 整单取消：SPUC_ALL_CANCEL_PO_HEADER<br />\n 取消时，判断非新建审批拒绝<br />\n审批拒绝：SPUC_ORDER_REJECTED_EVENT<br />\n 区分新建审批拒绝<br />\n撤销：SPUC_ORDER_REVOCATION_EVENT_AFTER<br />\n 重新同步：SPUC_RE_SYNC_ERP</p>\n<p>值集：SPUC.SYNC_EXP_TYPE、SPUC.SYNC_INTERFACE_TYPE</p>\n<p>返回消息：error.spuc.supplier_oreder_nums_is_zero<br />\n 配置表：scux_srm_hanslaser_supplier_life_cycle_place_order_control</p>\n<p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 同步失败 写入同步记录表</span><br><span class=\"line\"><span class=\"keyword\">and</span> spcr.sync_status <span class=\"operator\">=</span> <span class=\"string\">&#x27;FAIL&#x27;</span>  </span><br><span class=\"line\"><span class=\"keyword\">and</span> spcr.po_line_id <span class=\"keyword\">is</span> <span class=\"keyword\">null</span>  </span><br><span class=\"line\"><span class=\"keyword\">and</span> spcr.po_line_location_id <span class=\"keyword\">is</span> <span class=\"keyword\">null</span></span><br></pre></td></tr></table></figure></p>\n<p>pur-20078 配置表：scux_srm_hanslaser_supplier_life_cycle_place_order_control</p>\n<h3 id=\"pur-21957\"><a class=\"anchor\" href=\"#pur-21957\">#</a> pur-21957</h3>\n<p>-- 查询复制新的供应商附件<br />\n独立脚本：SCUX_QUANTUM_PO_COPY_UUID，SCUX_QUANTUM_UPDATE_SUP_ATTACHMENT_UUID<br />\nAPI：SCUX_QUANTUM_PO_COPY_UUID，SCUX_QUANTUM_UPDATE_SUP_ATTACHMENT_UUID<br />\n-- api 发布 更新供应商附件 UUID</p>\n<p>返回消息：error.spuc.quantum_po_status_is_not_delivery</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">org.srm.purchasecooperation.order.api.controller.v2.PoExternalController#deliveryExportToErp</span><br><span class=\"line\"></span><br><span class=\"line\">org.srm.purchasecooperation.order.api.controller.v2.PoReceiptInteractionController#poInitDeliveryWorkbench</span><br><span class=\"line\"></span><br><span class=\"line\">org.srm.purchasecooperation.order.api.controller.v1.PoHeaderController#exportErp</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pur-22195\"><a class=\"anchor\" href=\"#pur-22195\">#</a> pur-22195</h3>\n<p>API + 独立脚本：SCUX_DREAME_QUERY_DRAWING_LINE_BY_ITEM</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/08/01/18aa18c75d251422.png\" alt=\"\" /></p>\n<h3 id=\"pur-22427\"><a class=\"anchor\" href=\"#pur-22427\">#</a> pur-22427</h3>\n<p>-- 删除二开 恢复标准  <code>hrpt_print_report</code></p>\n<p><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hrpt_print_report</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> `srm`.`hrpt_print_report` (`report_id`, `doc_id`, `report_uuid`, `report_code`, `dataset_code`, `report_name`, `report_type`, `enabled_flag`, `remark`, `tenant_id`, `object_version_number`, `created_by`, `creation_date`, `last_updated_by`, `last_update_date`) <span class=\"keyword\">VALUES</span> (<span class=\"number\">67</span>, <span class=\"number\">6</span>, <span class=\"string\">&#x27;66032d351f364f31b44f4bd5e1442dfe&#x27;</span>, <span class=\"string\">&#x27;SODR.PO_REPT_NEW&#x27;</span>, <span class=\"string\">&#x27;SODR.STD.ORDER_DATASET&#x27;</span>, <span class=\"string\">&#x27;标准采购订单打印模板&#x27;</span>, <span class=\"string\">&#x27;PDF&#x27;</span>, <span class=\"number\">1</span>, <span class=\"keyword\">NULL</span>, <span class=\"number\">30</span>, <span class=\"number\">6</span>, <span class=\"number\">430</span>, <span class=\"string\">&#x27;2022-09-29 20:03:26&#x27;</span>, <span class=\"number\">495599</span>, <span class=\"string\">&#x27;2023-06-08 11:12:32&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> `srm`.`hrpt_print_report` (`report_id`, `doc_id`, `report_uuid`, `report_code`, `dataset_code`, `report_name`, `report_type`, `enabled_flag`, `remark`, `tenant_id`, `object_version_number`, `created_by`, `creation_date`, `last_updated_by`, `last_update_date`) <span class=\"keyword\">VALUES</span> (<span class=\"number\">388</span>, <span class=\"number\">6</span>, <span class=\"string\">&#x27;a8589263034d4ba3a0074c376fd36a92&#x27;</span>, <span class=\"string\">&#x27;SODR.PO_REPT_NEW2&#x27;</span>, <span class=\"string\">&#x27;SODR.STD.ORDER_DATASET_1&#x27;</span>, <span class=\"string\">&#x27;标准采购订单打印模板_库存组织&#x27;</span>, <span class=\"string\">&#x27;PDF&#x27;</span>, <span class=\"number\">1</span>, <span class=\"keyword\">NULL</span>, <span class=\"number\">30</span>, <span class=\"number\">1</span>, <span class=\"number\">495599</span>, <span class=\"string\">&#x27;2023-06-08 10:20:05&#x27;</span>, <span class=\"number\">495599</span>, <span class=\"string\">&#x27;2023-06-08 10:20:05&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> `srm`.`hrpt_print_report` (`report_id`, `doc_id`, `report_uuid`, `report_code`, `dataset_code`, `report_name`, `report_type`, `enabled_flag`, `remark`, `tenant_id`, `object_version_number`, `created_by`, `creation_date`, `last_updated_by`, `last_update_date`) <span class=\"keyword\">VALUES</span> (<span class=\"number\">389</span>, <span class=\"number\">6</span>, <span class=\"string\">&#x27;8450c0aebecc4fdbba8796b1ac624eda&#x27;</span>, <span class=\"string\">&#x27;SODR.PO_REPT_NEW3&#x27;</span>, <span class=\"string\">&#x27;SODR.STD.ORDER_DATASET_1_1&#x27;</span>, <span class=\"string\">&#x27;测试&#x27;</span>, <span class=\"string\">&#x27;PDF&#x27;</span>, <span class=\"number\">1</span>, <span class=\"keyword\">NULL</span>, <span class=\"number\">30</span>, <span class=\"number\">1</span>, <span class=\"number\">495599</span>, <span class=\"string\">&#x27;2023-06-08 11:22:51&#x27;</span>, <span class=\"number\">495599</span>, <span class=\"string\">&#x27;2023-06-08 11:22:51&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pur-22126\"><a class=\"anchor\" href=\"#pur-22126\">#</a> pur-22126</h3>\n<p>埋点：SPUC_ALL_CANCEL_PO_LINE<br />\nSPUC_LINE_CANCEL_PO_LINE_NEW<br />\nSPUC_LINE_CANCEL_PO_LINE<br />\n%%SPUC_LINE_CLOSE_PO_LINE<br />\nSPUC_ALL_CLOSE_PO_LINE%%<br />\n 独立脚本：SCUX_XTALPI_CHANGE_QUERY_PAYMENT_STAGE<br />\nSCUX_XTALPI_PO_CLOSE_CHECK<br />\nSCUX_XTALPI_PO_LINE_CLOSE_CHECK<br />\nSCUX_XTALPI_PO_LOCATION_PURCHASER_AFTER</p>\n<p>取消查询预付款、取消保存预付款<br />\n API + 独立脚本：SCUX_XTALPI_CANCEL_QUERY_PAYMENT_STAGE<br />\nSCUX_XTALPI_CANCEL_SAVE_PAYMET_STAGE</p>\n<p>返回消息：scux_xtalpi.line_cancel_faild<br />\nscux_xtalpi.line_close_faild<br />\nscux.xtalpi.error.payment_save_faild_pre_pay_is_no<br />\nscux.xtalpi.error.payment_rate_more_than_100<br />\nscux.xtalpi.error.paymet_stage_save_faild_amount_not_eq_po_amount<br />\nscux.xtalpi.error.payment_save_faild.data_is_empty</p>\n<p>API 挂载：<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@MarmotApiPoint(apiCode = &quot;PO_HEADER_CLOSE&quot;)</span><br><span class=\"line\">@MarmotApiPoint(apiCode = &quot;PO_LOCATION_CLOSE&quot;)</span><br><span class=\"line\">PO_LOCATION_PURCHASER</span><br></pre></td></tr></table></figure></p>\n<p>QB:  SCUX_XTALPI_QUERY_PREPAY_FLAG_BY_LINE</p>\n<h3 id=\"pur-21956\"><a class=\"anchor\" href=\"#pur-21956\">#</a> pur-21956</h3>\n<p>埋点：SPUC_ORDER_CONFIRM_AFTER<br />\n 注意 ConfirmType！=LINE_CONFIRM</p>\n<pre><code>SPUC_PO_DELIVERY_DATE_REVIEW_APPROVE_ADAPTOR\n</code></pre>\n<p>重新同步：SPUC_RE_SYNC_ERP</p>\n<p>SPUC.SYNC_EXP_TYPE_BY_LINE，SPUC.SYNC_INTERFACE_TYPE，SPUC.SYNC_EXP_TYPE</p>\n<h3 id=\"pur-21994\"><a class=\"anchor\" href=\"#pur-21994\">#</a> pur-21994</h3>\n<p>提供 API  待定  事务锁</p>\n<h3 id=\"pur-22331\"><a class=\"anchor\" href=\"#pur-22331\">#</a> PUR-22331</h3>\n<p>返回消息：spuc.query_param_sup_tenant_is_empty</p>\n<p>配置表：srm_supplier_iso_ignore_list<br />\n 供应商数据隔离忽略</p>\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/17/GIT/",
            "url": "https://fairyeye.github.io/2023/06/17/GIT/",
            "title": "Git",
            "date_published": "2023-06-17T14:33:35.000Z",
            "content_html": "<h3 id=\"gitee-go\"><a class=\"anchor\" href=\"#gitee-go\">#</a> Gitee Go</h3>\n<h4 id=\"流水线\"><a class=\"anchor\" href=\"#流水线\">#</a> 流水线</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 官方文档</span><br><span class=\"line\">https://blog.gitee.com/2022/11/23/pipeline/</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"前端ci\"><a class=\"anchor\" href=\"#前端ci\">#</a> 前端 CI</h4>\n<p>手动创建流水线，选择部署分之，需要手动增加部署阶段</p>\n<h5 id=\"添加部署阶段\"><a class=\"anchor\" href=\"#添加部署阶段\">#</a> 添加部署阶段</h5>\n<ol>\n<li>\n<p>点击发布后面的＋    添加新阶段</p>\n</li>\n<li>\n<p>点击部署  点击主机部署</p>\n</li>\n</ol>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/06/17/2e1e2d665f8fcd29.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>选择执行主机组（如果没有就先去添加主机，选择</li>\n</ol>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/06/17/d1715a1b2ec593f8.png\" alt=\"\" /></p>\n<ol start=\"4\">\n<li>填写部署脚本，前端项目把上游构建的包，解压到服务器指定路径即可</li>\n</ol>\n<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 功能：部署脚本会在部署主机组的每台机器上执行</span></span><br><span class=\"line\"><span class=\"comment\"># 使用场景：先将制品包解压缩到指定目录中，再执行启动脚本deploy.sh，脚本示例地址：https://gitee.com/gitee-go/spring-boot-maven-deploy-case/blob/master/deploy.sh</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir -p /home/admin/app</span></span><br><span class=\"line\"><span class=\"comment\"># tar zxvf ~/gitee_go/deploy/output.tar.gz -C /home/admin/app</span></span><br><span class=\"line\"><span class=\"comment\"># sh /home/admin/app/deploy.sh restart</span></span><br><span class=\"line\"><span class=\"comment\"># 如果你是php之类的无需制品包的制品方式，可以使用 git clone 或者 git pull 将源代码更新到服务器，再执行其他命令</span></span><br><span class=\"line\"><span class=\"comment\"># git clone ***@***.git</span></span><br><span class=\"line\">tar zxvf ~/gitee_go/deploy/output.tar.gz -C /home/ubuntu </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"添加主机\"><a class=\"anchor\" href=\"#添加主机\">#</a> 添加主机</h4>\n<ol>\n<li>点击新建主机组</li>\n</ol>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/06/17/e0925018357ec4d5.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>选择新建类型（以腾讯云为例），填写基本信息（以 Linux 为例），点击确认</li>\n</ol>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/06/17/09807a134b458ca9.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>添加主机</li>\n</ol>\n<p>点击添加 Linux 主机，选择通过命令行逐台添加，</p>\n<p>复制命令到目标腾讯云主机命令行</p>\n<p>刷新页面即可见关联服务器信息</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/06/17/ba5c1004444b1e6a.png\" alt=\"\" /></p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/06/17/b3943c35c7f70d3b.png\" alt=\"\" /></p>\n<h4 id=\"后端ci\"><a class=\"anchor\" href=\"#后端ci\">#</a> 后端 CI</h4>\n<h5 id=\"部署脚本\"><a class=\"anchor\" href=\"#部署脚本\">#</a> 部署脚本</h5>\n<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/gitee_go/deploy/</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\">tar -zxf API.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> target</span><br><span class=\"line\">pid=`ps -ef|grep smart-admin-api-1.0.0|grep -v grep|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$pid</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">sudo <span class=\"built_in\">kill</span> -15 <span class=\"variable\">$pid</span>  </span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">nohup</span> /usr/lib/jvm/jdk1.8.0_341/bin/java -jar smart-admin-api-1.0.0.jar &gt;/home/ubuntu/log.log &amp;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/gitee_go/deploy/</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\">tar -zxf API.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> target</span><br><span class=\"line\">pid=`ps -ef|grep smart-admin-api-1.0.0|grep -v grep|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$pid</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">sudo <span class=\"built_in\">kill</span> -15 <span class=\"variable\">$pid</span>  </span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">nohup</span> /usr/lib/jvm/jdk1.8.0_341/bin/java -jar smart-admin-api-1.0.0.jar</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&gt; /home/ubuntu/log.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"开源项目\"><a class=\"anchor\" href=\"#开源项目\">#</a> 开源项目</h3>\n<h4 id=\"oshi\"><a class=\"anchor\" href=\"#oshi\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29zaGkvb3NoaQ==\">Oshi</span></h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获取操作系统和硬件信息的 Java 库。这是一个基于 JNA 实现的获取本机操作系统和硬件信息的库，支持操作系统版本、进程、内存、 CPU 使用率、磁盘和分区、设备、传感器等信息。</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"playedu\"><a class=\"anchor\" href=\"#playedu\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BsYXlFZHUvUGxheUVkdQ==\">PlayEdu</span></h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一款 Java 写的内部培训系统。这是一款基于 SpringBoot+React 开发而成的视频培训系统，它界面清爽、交互流畅，支持上传资源、创建部门、添加学员、指派课程等功能，可用于企业和机构搭建内部培训平台。</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"holer\"><a class=\"anchor\" href=\"#holer\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dpc2RvbS1wcm9qZWN0cy9ob2xlcg==\">Holer</span></h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个将局域网中的应用映射到公网访问的端口映射软件，支持转发基于 TCP 协议的报文。内网穿透工具，包含 Web 后台管理系统。用到的技术如下：</span><br><span class=\"line\"></span><br><span class=\"line\">- 服务端采用 SpringBoot 和 Netty 实现</span><br><span class=\"line\">- 客户端采用 Java Netty 和 Go 语言实现</span><br></pre></td></tr></table></figure><br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/09/13/e1c366275bdb16f6.png\" alt=\"\" /></p>\n<h4 id=\"solopo\"><a class=\"anchor\" href=\"#solopo\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FsaXBheS9Tb2xvUGk=\">SoloPo</span></h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一个不需要连接电脑、非侵入式的 Android 自动化工具。公测版拥有录制回放、性能测试、一机多控三项主要功能，能为测试开发人员节省宝贵时间。安卓版本多、终端型号多，一个成熟安卓应用的上线需要进行大量测试，而很多测试都是属于重复操作，通过此工具可以极大简化测试人员的工作量</span><br></pre></td></tr></table></figure><br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/09/13/f9f815c624347451.png\" alt=\"\" /></p>\n<h3 id=\"hitomi\"><a class=\"anchor\" href=\"#hitomi\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0t1cnRCZXN0b3IvSGl0b21pLURvd25sb2FkZXI=\">Hitomi</span></h3>\n<p><strong>本周 star 增长数：400+</strong>，<strong>主语言：Python</strong></p>\n<p>Hitomi-Downloader 知名下载工具，只需要一个 url 就能下载对应的图片、视频、音频。部分特性：</p>\n<ul>\n<li>\n<p>简洁的用户界面</p>\n</li>\n<li>\n<p>支持下载加速，也支持限速</p>\n</li>\n<li>\n<p>支持单任务由 24 个线程</p>\n</li>\n<li>\n<p>支持多种下载方式</p>\n</li>\n</ul>\n<h3 id=\"python-搞定-uinicegui\"><a class=\"anchor\" href=\"#python-搞定-uinicegui\">#</a> Python 搞定 UI：nicegui</h3>\n<p><strong>本周 star 增长数：850+</strong>，<strong>主语言：Python、JavaScript</strong></p>\n<p><code>New</code>  用 Python 搞定 Web UI，有了它，你可以用 Python 创建按钮、对话框、Markdown 文件、3D 场景。</p>\n<blockquote>\n<p>GitHub 地址→https://github.com/zauberzeug/nicegui</p>\n</blockquote>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/09/22/65aeeb9f2a95da35.png\" alt=\"\" /></p>\n<h3 id=\"炫酷的-windows-终端软件fluentterminal\"><a class=\"anchor\" href=\"#炫酷的-windows-终端软件fluentterminal\">#</a> 炫酷的 Windows 终端软件：FluentTerminal</h3>\n<p><strong>主语言：C#</strong></p>\n<p>基于 UWP 的 Windows 终端应用，拥有强大的自定义主题模块，能够轻松定制出风格各异的主题。提供了中文选项，支持多窗口、SSH 和搜索等功能。</p>\n<blockquote>\n<p>HG 评价地址→https://hellogithub.com/repository/352150f3034742cbbf67d301a86973ca</p>\n</blockquote>\n<h3 id=\"12-ai-生图controlnet\"><a class=\"anchor\" href=\"#12-ai-生图controlnet\">#</a> 1.2 AI 生图：ControlNet</h3>\n<p><strong>主语言：Python</strong></p>\n<p><code>New</code>  上周线稿上色的 style2paints 在 ControlNet 面前可能只是个弟弟。ControlNet 是一种通过添加额外条件来控制扩散模型的神经网络结构。为什么说 style2paints 是个弟弟呢？这是 ControlNet 的社生成效果图，从线稿到成品，一句话搞点。</p>\n<blockquote>\n<p>GitHub 地址→https://github.com/lllyasviel/ControlNet</p>\n</blockquote>\n<h3 id=\"git技巧\"><a class=\"anchor\" href=\"#git技巧\">#</a> Git 技巧</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://hellogithub.com/article/9aed28d4d64b4649bb364685ef557ae4</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "use",
                "git"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/GitHub%20Page/",
            "url": "https://fairyeye.github.io/2023/06/05/GitHub%20Page/",
            "title": "GitHub Page",
            "date_published": "2023-06-05T06:10:07.408Z",
            "content_html": "<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 拉取子模块</span></span><br><span class=\"line\">git submodule init // 初始化子模块</span><br><span class=\"line\">git submodule update // 更新子模块与主仓库中的子模块代码同步</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "title": "单例模式",
            "date_published": "2023-06-05T05:49:50.605Z",
            "content_html": "<h4 id=\"1-最简单的单例模式\"><a class=\"anchor\" href=\"#1-最简单的单例模式\">#</a> 1. 最简单的单例模式：</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.JUC.thread;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * @author huapeng.zhang</span><br><span class=\"line\"> * @version 1.0</span><br><span class=\"line\"> * @date 2020/9/17 18:28</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class SingletomDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static SingletomDemo singletomDemo = null;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private SingletomDemo() &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + &quot;\\t 我是构造方法SingletomDemo()！&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static SingletomDemo getInstance() &#123;</span><br><span class=\"line\">        if (singletomDemo == null) &#123;</span><br><span class=\"line\">        \t\tsingletomDemo = new SingletomDemo();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return singletomDemo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        // 单线程</span><br><span class=\"line\">        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>在单线程的情况下，打印结果如下：</p>\n<p><img data-src=\"https://i.loli.net/2020/09/17/J9rb5oynQclfD4d.png\" alt=\"image-20200917191550283\" /></p>\n<p>可以看到，虽然我们一共调用了六次 <code>getInstance()</code> ， 但是只打印了一次构造方法输出内容，也就是只调用了一个构造函数，所获得的对象地址自然是一样的。</p>\n<h4 id=\"2-多线程下的单例模式\"><a class=\"anchor\" href=\"#2-多线程下的单例模式\">#</a> 2. 多线程下的单例模式</h4>\n<p>我们对 <code>main()</code>  方法做一下改造，改造后的代码如下：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">    // 改为多线程后 可能多次调用构造函数</span><br><span class=\"line\">    for (int i = 0; i &lt; 10; i++) &#123;</span><br><span class=\"line\">        new Thread(() -&gt; &#123;</span><br><span class=\"line\">            SingletomDemo.getInstance();</span><br><span class=\"line\">        &#125;, String.valueOf(i)).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>打印结果为：</p>\n<p><img data-src=\"https://i.loli.net/2020/09/17/Q7RWYjayOgoXfH1.png\" alt=\"image-20200917192220270\" /></p>\n<p>多次执行下可以看到打印的次数是不同的。</p>\n<p>可以对 <code>getInstance()</code>  方法添加 <code>synchronized</code>  加锁，保证只生成一个实例。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private static synchronized SingletomDemo getInstance() &#123;</span><br><span class=\"line\">    if (singletomDemo == null) &#123;</span><br><span class=\"line\">    \t\tsingletomDemo = new SingletomDemo();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return singletomDemo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>再次执行程序发现只打印了一次构造方法输出函数，还有另外一种方法就是 <code>DCL：double check locks双端检测模式</code> 模式也可以达到同样的目的。</p>\n<h4 id=\"3dcl-单例模式\"><a class=\"anchor\" href=\"#3dcl-单例模式\">#</a> 3.DCL + 单例模式</h4>\n<p>我们再次对 <code>getInstance()</code>  方法进行改造，代码如下：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// DCL模式(double check locks双端检测模式)</span><br><span class=\"line\">private static SingletomDemo getInstance() &#123;</span><br><span class=\"line\">    if (singletomDemo == null) &#123;</span><br><span class=\"line\">        synchronized (SingletomDemo.class) &#123;</span><br><span class=\"line\">            if (singletomDemo == null) &#123;</span><br><span class=\"line\">                singletomDemo = new SingletomDemo();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return singletomDemo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>当我们的单例模式写到这种程度的时候，基本可以应对 99% 的情况，但是由于 <code>指令排序</code> 的存在，还是有可能会出现问题。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">memory = allocate(); //1.分配对象内存空间</span><br><span class=\"line\">instance(memory);    //2.初始化对象</span><br><span class=\"line\">instance = memory;   //3.设置instance指向刚分配的内存地址，此时instance!=null</span><br></pre></td></tr></table></figure></p>\n<p>步骤 2、3 不存在数据依赖，所以由于指令重排的关系，可能会出现：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">memory = allocate(); //1.分配对象内存空间</span><br><span class=\"line\">instance = memory;   //3.设置instance指向刚分配的内存地址，此时instance!=null</span><br><span class=\"line\">instance(memory);    //2.初始化对象</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4volatile-单例模式\"><a class=\"anchor\" href=\"#4volatile-单例模式\">#</a> 4.Volatile + 单例模式</h4>\n<p>我们在声明  <code>singletomDemo</code>  时，加上 <code>Volatile</code>  关键字修饰，就可以达到完美的效果。</p>\n<p>最终代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.JUC.thread;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * @author huapeng.zhang</span><br><span class=\"line\"> * @version 1.0</span><br><span class=\"line\"> * @date 2020/9/17 18:28</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class SingletomDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static volatile SingletomDemo singletomDemo = null;</span><br><span class=\"line\"></span><br><span class=\"line\">    private SingletomDemo() &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + &quot;\\t 我是构造方法SingletomDemo()！&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // DCL模式(double check locks双端检测模式)</span><br><span class=\"line\">    private static SingletomDemo getInstance() &#123;</span><br><span class=\"line\">        if (singletomDemo == null) &#123;</span><br><span class=\"line\">            synchronized (SingletomDemo.class) &#123;</span><br><span class=\"line\">                if (singletomDemo == null) &#123;</span><br><span class=\"line\">                    singletomDemo = new SingletomDemo();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return singletomDemo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        // 单线程</span><br><span class=\"line\">//        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">//        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">//        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\"></span><br><span class=\"line\">//         改为多线程后 可能多次调用构造函数</span><br><span class=\"line\">//         可以在 getInstance上加SYNC解决问题</span><br><span class=\"line\">        for (int i = 0; i &lt; 10; i++) &#123;</span><br><span class=\"line\">            new Thread(() -&gt; &#123;</span><br><span class=\"line\">                SingletomDemo.getInstance();</span><br><span class=\"line\">            &#125;, String.valueOf(i)).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "学习笔记",
                "demo"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%90%8C%E6%AD%A5%E4%B8%8D%E5%90%8C%E6%9C%8D%E5%8A%A1%E7%9A%84MySQL%E6%95%B0%E6%8D%AE%E8%A1%A8/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%90%8C%E6%AD%A5%E4%B8%8D%E5%90%8C%E6%9C%8D%E5%8A%A1%E7%9A%84MySQL%E6%95%B0%E6%8D%AE%E8%A1%A8/",
            "title": "MySQL查询",
            "date_published": "2023-06-05T05:49:50.605Z",
            "content_html": "<h4 id=\"1-首先要保证本地的mysql服务支持federated引擎\"><a class=\"anchor\" href=\"#1-首先要保证本地的mysql服务支持federated引擎\">#</a> 1. 首先要保证本地的 MySQL 服务支持 FEDERATED 引擎。</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：SHOW ENGINES;</span><br><span class=\"line\">如下 FEDERATED 行的Support为YES则表示开启了FEDERATED。</span><br><span class=\"line\">如果为 NO 则表示未开启。</span><br><span class=\"line\"></span><br><span class=\"line\">如果 FEDERATED 没有开启的话 要启用。</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://i.loli.net/2020/10/22/7a8G6nUXbLM24wl.png\" alt=\"\" /></p>\n<h4 id=\"2启用-federated\"><a class=\"anchor\" href=\"#2启用-federated\">#</a> 2. 启用 FEDERATED</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在MySQL的配置文件</span><br><span class=\"line\">安装目录下的my.ini或my.cnf </span><br><span class=\"line\">加上 一行  `FEDERATED`</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://i.loli.net/2020/10/22/HhLBosuOdeNDbgQ.png\" alt=\"\" /></p>\n<h4 id=\"3建表\"><a class=\"anchor\" href=\"#3建表\">#</a> 3. 建表</h4>\n<p><strong>建表一般应的是 InnoDB 引擎，这里需要修改一下 改为</strong>  <code>ENGINE=FEDERATED</code></p>\n<p>从原表导出表结构 SQL，然后修改  <code>ENGINE = InnoDB</code> -&gt; <code>ENGINE=FEDERATED CONNECTION='mysql://用户名:密码@IP:PORT/库名/表名'</code></p>\n<p>然后打开这张表，可以看到远程表里的数据已经同步到了这张表。</p>\n",
            "tags": [
                "数据库",
                "utils"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/WHEN%20YOU%20HAVE%20A%20NEW%20PC/",
            "url": "https://fairyeye.github.io/2023/06/05/WHEN%20YOU%20HAVE%20A%20NEW%20PC/",
            "title": "WHEN YOU HAVE A NEW PC",
            "date_published": "2023-06-05T05:49:50.604Z",
            "content_html": "<h3 id=\"center-when-you-have-a-new-pccenter\"><a class=\"anchor\" href=\"#center-when-you-have-a-new-pccenter\">#</a> &lt;center&gt; WHEN YOU HAVE A NEW PC&lt;/center&gt;</h3>\n<h4 id=\"java环境配置\"><a class=\"anchor\" href=\"#java环境配置\">#</a> Java 环境配置</h4>\n<h5 id=\"1-安装\"><a class=\"anchor\" href=\"#1-安装\">#</a> 1. 安装</h5>\n<p>​\t提前新建两个文件夹，jdk，jre，默认路径也可以</p>\n<p>​\t安装 <code>jdk-8u111-windows-x64.exe</code></p>\n<p>​\t设置 jdk、jre 的路径</p>\n<h5 id=\"2-配置环境变量\"><a class=\"anchor\" href=\"#2-配置环境变量\">#</a> 2. 配置环境变量</h5>\n<p>​\t右键此电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt;  <strong>系统变量 (S)</strong></p>\n<p>​\t只有系统变量才是全局的。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新建\tCLASSPATH\t.;</span><br><span class=\"line\">新建\tJAVA_HOME\tjdk路径</span><br><span class=\"line\">修改\tpath\t\t添加 %JAVA_HOME%\\bin;</span><br><span class=\"line\"></span><br><span class=\"line\">测试\tjava -version</span><br><span class=\"line\">\t javac -version\t</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"maven环境配置\"><a class=\"anchor\" href=\"#maven环境配置\">#</a> Maven 环境配置</h4>\n<ol>\n<li>解压 <code>apache-maven-3.3.9.rar</code>  到指定的目录。</li>\n<li>修改配置文件（压缩包已修改过）。</li>\n</ol>\n<h4 id=\"git-工具\"><a class=\"anchor\" href=\"#git-工具\">#</a> GIT 工具</h4>\n<h5 id=\"1-全局配置用户信息\"><a class=\"anchor\" href=\"#1-全局配置用户信息\">#</a> 1. 全局配置用户信息</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;fairy&quot;</span><br><span class=\"line\">git config --global user.email &quot;fairy@gmail.com&quot;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-生成key\"><a class=\"anchor\" href=\"#2-生成key\">#</a> 2. 生成 key</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &#x27;email&#x27; // Email可选，会在key中生成你的邮箱信息  一直回车就行</span><br></pre></td></tr></table></figure></p>\n<p>​\t生成的 key 文件   <code>C:\\Users\\你的用户名\\.ssh\\id_rsa.pub</code></p>\n<p>​\t用文本编辑器打开，复制到 GIT 上。</p>\n<h5 id=\"3-上传项目到git\"><a class=\"anchor\" href=\"#3-上传项目到git\">#</a> 3. 上传项目到 GIT</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 项目文件加夹</span><br><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin git@github.com:fairyeye/StudyJava.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;Initial commit&quot;</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"mysql-安装\"><a class=\"anchor\" href=\"#mysql-安装\">#</a> MySQL 安装</h4>\n<p>安装 <code>https://www.runoob.com/mysql/mysql-install.html</code></p>\n<p>修改初始密码</p>\n<p>MySQL 版本 5.7.6 版本以前用户可以使用如下命令：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SET PASSWORD = PASSWORD(&#x27;your pwd&#x27;); </span><br></pre></td></tr></table></figure><br />\nMySQL 版本 5.7.6 版本开始的用户可以使用如下命令：<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER USER USER() IDENTIFIED BY &#x27;your pwd&#x27;;</span><br></pre></td></tr></table></figure></p>\n<p>登录报错  <code>https://www.cnblogs.com/lifan1998/p/9177731.html</code></p>\n<h4 id=\"去图标\"><a class=\"anchor\" href=\"#去图标\">#</a> 去图标</h4>\n<p>​\t管理员运行   <code>去图标.bat</code>  文件。</p>\n<h4 id=\"谷歌访问助手\"><a class=\"anchor\" href=\"#谷歌访问助手\">#</a> 谷歌访问助手</h4>\n<p>​\t谷歌浏览器 -&gt; 更多工具 -&gt; 扩展程序 -&gt; 开发者模式 (打开) 。</p>\n<p>​\t拖动  <code>谷歌访问助手.crx</code>  到谷歌浏览器中。</p>\n<h4 id=\"软件安装清单\"><a class=\"anchor\" href=\"#软件安装清单\">#</a> 软件安装清单</h4>\n<ul>\n<li>\n<p>IDEA：</p>\n</li>\n<li>\n<p>Chrome：</p>\n</li>\n<li>\n<p>uTools：</p>\n</li>\n<li>\n<p>Typora：</p>\n</li>\n<li>\n<p>Another Redis Desktop Manager：很好看的 Redis 客户端</p>\n</li>\n<li>\n<p>XShell：好看 好用</p>\n</li>\n<li>\n<p>tabby-terminal：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0V1Z2VueS90YWJieS9yZWxlYXNlcy90YWcvdjEuMC4xNjQ=\">https://github.com/Eugeny/tabby/releases/tag/v1.0.164</span></p>\n</li>\n<li>\n<p>Shadowsocks：小飞机</p>\n</li>\n<li>\n<p>Windows Termial:Windows 终端</p>\n</li>\n<li>\n<ul>\n<li>nvm: Windows 切换 node 版本</li>\n</ul>\n</li>\n<li>\n<p>n：Mac 切换 node 版本</p>\n</li>\n<li>\n<p>pyenv：切换 python 版本</p>\n<ul>\n<li>Invoke-WebRequest -UseBasicParsing -Uri &quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3B5ZW52LXdpbi9weWVudi13aW4vbWFzdGVyL3B5ZW52LXdpbi9pbnN0YWxsLXB5ZW52LXdpbi5wczE=\">https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1</span>&quot; -OutFile &quot;./install-pyenv-win.ps1&quot;; &amp;&quot;./install-pyenv-win.ps1&quot;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mac\"><a class=\"anchor\" href=\"#mac\">#</a> Mac</h2>\n<h3 id=\"终端\"><a class=\"anchor\" href=\"#终端\">#</a> 终端：</h3>\n<h5 id=\"oh-my-zsh\"><a class=\"anchor\" href=\"#oh-my-zsh\">#</a> oh my zsh</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://zhuanlan.zhihu.com/p/550022490</span><br><span class=\"line\">https://blog.csdn.net/weixin_42326144/article/details/121957795</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "杂谈"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98/",
            "url": "https://fairyeye.github.io/2023/06/05/%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98/",
            "title": "Transactional注解",
            "date_published": "2023-06-05T05:49:50.604Z",
            "content_html": "<p>方法 A 中调用 B 后再调用 C, 三个方法中均有插入数据后再查询数据</p>\n<p>B 方法的注解：@Transactional (propagation=Propagation.REQUIRES_NEW) -- 不管是否存在事务，都创建一个新的事务，原来的挂起，新的执行完毕，继续执行老的事务</p>\n<p>C 方法的注解：@Transactional (propagation=Propagation.REQUIRED) -- 如果有事务，那么加入事务，没有的话新建一个</p>\n<p>1、当方法 B 或者 C 报错时，A、B、C 方法都回滚</p>\n<p>2、当方法 A、B、C 异常被捕获时，A、B、C 事务不回滚（a、b、c 均入库）</p>\n<p>3、当方法 BC 执行后，方法 A 报错时，A、C 事务回滚，B 事务不回滚（b 数据入库）</p>\n<p>A 方法向表中添加数据 a，在查询该表能得到数据 a</p>\n<p>B 方法向表中添加数据 b，再查询该表能得到数据 b</p>\n<p>C 方法向表中添加数据 c，再查询该表能得到数据 a，b，c</p>\n<p>带有注解 @Transactional (propagation=Propagation.REQUIRES_NEW) 的方法走完之后，数据就会被提交入库</p>\n<p>另外需要注意方法内部调用 @Transactional (propagation=Propagation.REQUIRES_NEW) 注解不生效，比如 A 和 B 都在同一个方法中，A 调用 B，B 方法是此注解，则不生效。同样，AOP 拦截也拦截不到 B</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public enum Propagation &#123;</span><br><span class=\"line\">    REQUIRED(0),</span><br><span class=\"line\">    SUPPORTS(1),</span><br><span class=\"line\">    MANDATORY(2),</span><br><span class=\"line\">    REQUIRES_NEW(3),</span><br><span class=\"line\">    NOT_SUPPORTED(4),</span><br><span class=\"line\">    NEVER(5),</span><br><span class=\"line\">    NESTED(6);</span><br><span class=\"line\"></span><br><span class=\"line\">    private final int value;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Propagation(int value) &#123;</span><br><span class=\"line\">        this.value = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public int value() &#123;</span><br><span class=\"line\">        return this.value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>七种事物传播类型 默认为： <code>REQUIRED</code></p>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/",
            "title": "Sql小技巧",
            "date_published": "2023-06-05T05:49:50.604Z",
            "content_html": "<p>MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回 N 行。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 反例（耗时129.570s）</span><br><span class=\"line\">select * from task_result LIMIT 20000000, 10;</span><br><span class=\"line\"></span><br><span class=\"line\"># 正例（耗时5.114s）</span><br><span class=\"line\">SELECT a.* FROM task_result a, (select id from task_result LIMIT 20000000, 10) b where a.id = b.id;</span><br><span class=\"line\"></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">task_result表为生产环境的一个表，总数据量为3400万，id为主键，偏移量达到2000万</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"获取一条数据时的limit-1\"><a class=\"anchor\" href=\"#获取一条数据时的limit-1\">#</a> 获取一条数据时的 Limit 1</h3>\n<p>在很多情况下我们已知数据仅存在一条，此时我们应该告知数据库只用查一条，否则将会转化为全表扫描</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 反例（耗时2424.612s）</span><br><span class=\"line\">select * from task_result where unique_key = &#x27;ebbf420b65d95573db7669f21fa3be3e_861414030800727_48&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 正例（耗时1.036s）</span><br><span class=\"line\">select * from task_result where unique_key = &#x27;ebbf420b65d95573db7669f21fa3be3e_861414030800727_48&#x27; LIMIT 1;</span><br><span class=\"line\"></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">task_result表为生产环境的一个表，总数据量为3400万，where条件非索引字段，数据所在行为第19486条记录</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"批量插入\"><a class=\"anchor\" href=\"#批量插入\">#</a> 批量插入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 反例</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;A&#x27;,24)</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;B&#x27;,24)</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;C&#x27;,24)</span><br><span class=\"line\"></span><br><span class=\"line\"># 正例</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;A&#x27;,24),(&#x27;B&#x27;,24),(&#x27;C&#x27;,24);</span><br><span class=\"line\"></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">比较常规，就不多做说明了</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81ZWExNmRlZGU1MWQ0NTQ3MGI0ZmZjNWI/dXRtX3NvdXJjZT1nb2xkX2Jyb3dzZXJfZXh0ZW5zaW9u\">https://juejin.im/post/5ea16dede51d45470b4ffc5b?utm_source=gold_browser_extension</span></p>\n",
            "tags": [
                "数据库",
                "mysql"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Springboot%E8%BF%94%E5%9B%9Ehtml/",
            "url": "https://fairyeye.github.io/2023/06/05/Springboot%E8%BF%94%E5%9B%9Ehtml/",
            "title": "Springboot",
            "date_published": "2023-06-05T05:49:50.603Z",
            "content_html": "<h1 id=\"springboot返回html\"><a class=\"anchor\" href=\"#springboot返回html\">#</a> Springboot 返回 html</h1>\n<p>注：Springboot 的版本 2.1.3.RELEASE</p>\n<p><em>List-1</em> application.properties 文件</p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.<span class=\"property\">port</span>=<span class=\"number\">8080</span></span><br><span class=\"line\">#url中，项目的前缀</span><br><span class=\"line\">server.<span class=\"property\">servlet</span>.<span class=\"property\">context</span>-path=/project</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">spring.<span class=\"property\">mvc</span>.<span class=\"property\">view</span>.<span class=\"property\">prefix</span>=/</span><br><span class=\"line\">spring.<span class=\"property\">mvc</span>.<span class=\"property\">view</span>.<span class=\"property\">suffix</span>=.<span class=\"property\">html</span></span><br></pre></td></tr></table></figure></p>\n<p>整体结构如下图 1 所示，html 要放在 static 下，不是 templates 下</p>\n<p><img data-src=\"https://ask.qcloudimg.com/http-save/yehe-5089774/1k8adq8jn7.jpeg?imageView2/2/w/1620\" alt=\"img\" /></p>\n<p>图１</p>\n<p><em>List-2</em> HelloController 的内容如下</p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">extern</span>.<span class=\"property\">slf4j</span>.<span class=\"property\">Slf4j</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.<span class=\"property\">springframework</span>.<span class=\"property\">stereotype</span>.<span class=\"property\">Controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.<span class=\"property\">springframework</span>.<span class=\"property\">web</span>.<span class=\"property\">bind</span>.<span class=\"property\">annotation</span>.<span class=\"property\">RequestMapping</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"title class_\">Slf4</span>j</span><br><span class=\"line\">@<span class=\"title class_\">Controller</span></span><br><span class=\"line\">public <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"title class_\">RequestMapping</span>(value = <span class=\"string\">&quot;/hello&quot;</span>)</span><br><span class=\"line\">    public <span class=\"title class_\">String</span> <span class=\"title function_\">index</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        log.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;收到请求&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;html/hello&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><em>List-3</em> 启动 springboot，之后在浏览器中输入</p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#返回index.<span class=\"property\">html</span>的内容</span><br><span class=\"line\"><span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8080/project/</span></span><br><span class=\"line\"></span><br><span class=\"line\">#返回hello.<span class=\"property\">html</span>的内容</span><br><span class=\"line\"><span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8080/project/hello</span></span><br></pre></td></tr></table></figure></p>\n<p>网上很多关于模板的（Thymeleaf 、FreeMarker 等），但是我不需要，我只需要纯的 html。</p>\n<p>index.html 是 springboot 的默认 welcome page。</p>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lYjRjMGZjMmRmYzQ=\">https://www.jianshu.com/p/eb4c0fc2dfc4</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNwcmluZy5pby9zcHJpbmctYm9vdC9kb2NzL2N1cnJlbnQvcmVmZXJlbmNlL2h0bWxzaW5nbGUvI2Jvb3QtZmVhdHVyZXMtc3ByaW5nLW12Yy1zdGF0aWMtY29udGVudA==\">https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-spring-mvc-static-content</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNwcmluZy5pby9zcHJpbmctYm9vdC9kb2NzL2N1cnJlbnQvcmVmZXJlbmNlL2h0bWxzaW5nbGUvI2Jvb3QtZmVhdHVyZXMtc3ByaW5nLW12Yy13ZWxjb21lLXBhZ2U=\">https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-spring-mvc-welcome-page</span></li>\n</ol>\n<p>​     (adsbygoogle = window.adsbygoogle || []).push({});</p>\n",
            "tags": [
                "基础"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/StringToInteger/",
            "url": "https://fairyeye.github.io/2023/06/05/StringToInteger/",
            "title": "StringToInteger",
            "date_published": "2023-06-05T05:49:50.603Z",
            "content_html": "<h1 id=\"string-转-integer\"><a class=\"anchor\" href=\"#string-转-integer\">#</a> String 转 Integer</h1>\n<h2 id=\"1integer的parseint方法\"><a class=\"anchor\" href=\"#1integer的parseint方法\">#</a> 1.Integer 的 parseInt 方法</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;123&quot;;</span><br><span class=\"line\">int value = Integer.parseInt(string);</span><br><span class=\"line\">System.out.println(&quot;stringToInt----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：StringToInt----------&gt;123</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2integer的valueof方法\"><a class=\"anchor\" href=\"#2integer的valueof方法\">#</a> 2.Integer 的 valueOf 方法</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;123&quot;;</span><br><span class=\"line\">Integer value = Integer.valueOf(string);</span><br><span class=\"line\">System.out.println(&quot;stringToInt1----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：StringToInt1----------&gt;123</span><br></pre></td></tr></table></figure></p>\n<p>以上两种方法都是可行的。</p>\n<p>但是会有特殊的情况，比如：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">int value = Integer.parseInt(string);</span><br><span class=\"line\">System.out.println(&quot;stringToInt----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;abc&quot;</span><br><span class=\"line\">\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:580)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:615)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.stringToInt(StringToInt.java:16)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.main(StringToInt.java:10)</span><br></pre></td></tr></table></figure></p>\n<p>使用 stringToInt1 () 也会返回同样的错误。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static Integer valueOf(String s) throws NumberFormatException &#123;</span><br><span class=\"line\">    return Integer.valueOf(parseInt(s, 10));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>valueOf () 调用了 parseInt ()，所以返回同样的错误是正常的。</p>\n<p>按照正常的逻辑来说，我们需要对这个错误进行处理，比如：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">int value = 0;</span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">    value = Integer.parseInt(string);</span><br><span class=\"line\">&#125; catch (NumberFormatException e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(&quot;StringToInt----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：</span><br><span class=\"line\">java.lang.NumberFormatException: For input string: &quot;abc&quot;</span><br><span class=\"line\">\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:580)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:615)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.stringToInt(StringToInt.java:18)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.main(StringToInt.java:10)</span><br><span class=\"line\">StringToInt----------&gt;0</span><br></pre></td></tr></table></figure></p>\n<p>可以看到，虽然依然报错，但是程序还是继续执行了。</p>\n<p>然后回到主题。</p>\n<h2 id=\"3guava-的-ints-结合-java8-的-optional\"><a class=\"anchor\" href=\"#3guava-的-ints-结合-java8-的-optional\">#</a> 3.Guava 的 Ints 结合 Java8 的 Optional</h2>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">Integer value = Optional.ofNullable(string)</span><br><span class=\"line\">        .map(Ints::tryParse)</span><br><span class=\"line\">        .orElse(0);</span><br><span class=\"line\"> System.out.println(&quot;StringToInt2----------&gt;&quot; + value);</span><br><span class=\"line\"> </span><br><span class=\"line\"> 结果：StringToInt2----------&gt;0</span><br></pre></td></tr></table></figure></p>\n<p>可以在转换失败的时候为他设置默认值：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">Integer value = Optional.ofNullable(string)</span><br><span class=\"line\">        .map(Ints::tryParse)</span><br><span class=\"line\">        .orElse(100);</span><br><span class=\"line\"> System.out.println(&quot;StringToInt2----------&gt;&quot; + value);</span><br><span class=\"line\"> </span><br><span class=\"line\"> 结果：StringToInt2----------&gt;100</span><br></pre></td></tr></table></figure></p>\n<p><strong>写在末尾：之所以写这么详细是因为最开始的时候我很菜，看别人写的文档都很简单，虽然可以解决问题，但是却不解其意，所以写的啰嗦一点，对新手比较友好。</strong></p>\n<p>​\t&lt;/body&gt;</p>\n<p>&lt;/html&gt;</p>\n",
            "tags": [
                "java"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E4%BB%A5%E4%B8%8B%E7%9F%A5%E8%AF%86/",
            "url": "https://fairyeye.github.io/2023/06/05/%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E4%BB%A5%E4%B8%8B%E7%9F%A5%E8%AF%86/",
            "title": "需要掌握以下知识",
            "date_published": "2023-06-05T05:49:50.603Z",
            "content_html": "<ol>\n<li>\n<p>导入数据<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/01/18/7595fe99b5f3116a.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>匹配规则<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/01/18/0cb7d29296c95699.png\" alt=\"\" /><br />\n 3. 生成报告和数据<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/01/18/9f9bd4684069b961.png\" alt=\"\" /></p>\n</li>\n</ol>\n<p>作为一名三年经验的 Java 开发人员，你需要掌握以下知识：</p>\n<ol>\n<li>\n<p>Java 基础知识：掌握 Java 的基本语法、面向对象编程、常用数据结构和算法等，能够熟练使用 Java 语言进行开发。</p>\n</li>\n<li>\n<p>Java Web 开发框架：熟悉 Spring、SpringMVC 和 MyBatis 等主流的 Java Web 开发框架，能够使用这些框架进行 Web 应用程序的开发。</p>\n</li>\n<li>\n<p>数据库知识：熟悉关系型数据库和 NoSQL 数据库的使用，掌握 SQL 语言和数据库设计的基本知识。</p>\n</li>\n<li>\n<p>Web 前端技术：熟悉 HTML、CSS、JavaScript、jQuery 等前端开发技术，能够与前端开发人员协同工作，完成 Web 应用程序的前后端分离开发。</p>\n</li>\n<li>\n<p>网络编程知识：熟悉 TCP/IP 协议、HTTP 协议等网络编程相关的知识，能够使用 Java 进行网络编程开发。</p>\n</li>\n<li>\n<p>分布式系统开发：了解分布式系统的基本概念和原理，熟悉 Spring Cloud、Dubbo 等分布式系统开发框架，能够进行分布式系统的设计和开发。</p>\n</li>\n<li>\n<p>微服务架构：了解微服务架构的基本概念和原理，熟悉 Spring Boot、Spring Cloud 等微服务开发框架，能够进行微服务的设计和开发。</p>\n</li>\n<li>\n<p>工具和技术：掌握 Maven、Git、Jenkins 等常用的工具和技术，能够进行代码管理、构建和部署。</p>\n</li>\n<li>\n<p>技术栈扩展：根据自身的兴趣和职业发展需求，了解其他的 Java 技术栈，例如大数据处理、人工智能、区块链等，不断扩展自己的技术领域。</p>\n</li>\n</ol>\n<p>除了以上技术知识，你还需要具备良好的团队协作能力、学习能力和解决问题的能力，能够快速适应不同的项目需求和开发环境，不断提升自己的技术水平和职业素养。</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/09/18/2deefcad5a554594.png\" alt=\"\" /></p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/09/18/8b2889661b1c45e0.png\" alt=\"\" /></p>\n",
            "tags": [
                "学习"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Java%208%20Stream/",
            "url": "https://fairyeye.github.io/2023/06/05/Java%208%20Stream/",
            "title": "List stream",
            "date_published": "2023-06-05T05:49:50.602Z",
            "content_html": "<p>通过 <code>workOrederNum</code>  字段排序</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;ProduceOrderDTO&gt; collect = list.stream().sorted(Comparator.comparing(ProduceOrderDTO::getWorkOrderNum)).collect(Collectors.toList());</span><br></pre></td></tr></table></figure></p>\n<p>查出 <code>InstructionPoDTO</code>  中 <code>InstructionDocNum</code>  作为 list</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 筛选出不重复的 instructionDocNum</span></span><br><span class=\"line\">List&lt;String&gt; instructionDocNums = read.stream().map(InstructionPoDTO::getInstructionDocNum).distinct().collect(Collectors.toList());</span><br></pre></td></tr></table></figure></p>\n<p>筛选所有 <code>instructionDocNum = 123</code>  的对象</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;InstructionPoDTO&gt; instructionPoDTOS = read.stream().filter(instructionPoDTO -&gt;</span><br><span class=\"line\">     instructionPoDTO.getInstructionDocNum().equals(<span class=\"string\">&quot;123&quot;</span>)).collect(Collectors.toList());</span><br></pre></td></tr></table></figure></p>\n<p>查询出第一个</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">instructionDocId</span> <span class=\"operator\">=</span> instructionDocs.stream().findFirst().get();</span><br></pre></td></tr></table></figure></p>\n<p>设置 <code>typeCode</code>  为 key， <code>list</code>  的对象为 <code>value</code></p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String, MtGenType&gt; typesMap = types.stream().collect(Collectors.toMap(t -&gt; t.getTypeCode(), t -&gt; t));</span><br></pre></td></tr></table></figure></p>\n<p>// 通过字段去重</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">instructionSapStockDTOS.stream().collect(Collectors.collectingAndThen(Collectors.toCollection(()-&gt; new TreeSet&lt;&gt;(Comparator.comparing(o -&gt; o.getMaterial()+&quot;;&quot;+o.getPlant()+&quot;;&quot;+o.getStorage()+&quot;;&quot;+o.getBatch()+&quot;;&quot;+o.getSpecialStock()))), ArrayList::new));</span><br></pre></td></tr></table></figure></p>\n<p>GROUP BY</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String, List&lt;WmsIqcRecord&gt;&gt; map = records.stream().collect(Collectors.groupingBy(iqcRecord -&gt; &#123;</span><br><span class=\"line\">                    if (StringUtils.equals(&quot;TO_DO&quot;, iqcRecord.getStatus())) &#123;</span><br><span class=\"line\">                        switch (iqcRecord.getDealMethod()) &#123;</span><br><span class=\"line\">                            case &quot;RELEASE&quot;:</span><br><span class=\"line\">                                return &quot;TO_RELEASE&quot;;</span><br><span class=\"line\">                            case &quot;FREEZE&quot;:</span><br><span class=\"line\">                                return &quot;TO_FREEZE&quot;;</span><br><span class=\"line\">                            case &quot;RETURN&quot;:</span><br><span class=\"line\">                                return &quot;TO_RETURN&quot;;</span><br><span class=\"line\">                            default:</span><br><span class=\"line\">                                return &quot;TO_DO&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125; else if (StringUtils.equals(&quot;DONE&quot;, iqcRecord.getStatus())) &#123;</span><br><span class=\"line\">                        switch (iqcRecord.getDealMethod()) &#123;</span><br><span class=\"line\">                            case &quot;RELEASE&quot;:</span><br><span class=\"line\">                                return &quot;RELEASE_DONE&quot;;</span><br><span class=\"line\">                            case &quot;FREEZE&quot;:</span><br><span class=\"line\">                                return &quot;FREEZE_DONE&quot;;</span><br><span class=\"line\">                            case &quot;RETURN&quot;:</span><br><span class=\"line\">                                return &quot;RETURN_DONE&quot;;</span><br><span class=\"line\">                            default:</span><br><span class=\"line\">                                return &quot;DONE&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125; else &#123;</span><br><span class=\"line\">                        return &quot;DEAL&quot;;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;));</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//        List&lt;LocalDate&gt; collect = localDates.stream().sorted((var1, var2) -&gt; &#123;</span><br><span class=\"line\">//            if (var1.isBefore(var2)) &#123;</span><br><span class=\"line\">//                return -1;</span><br><span class=\"line\">//            &#125;</span><br><span class=\"line\">//            return 1;</span><br><span class=\"line\">//        &#125;).collect(Collectors.toList());</span><br><span class=\"line\">//        System.out.println(localDates.stream().sorted().collect(Collectors.toList()));</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/MySQL/",
            "url": "https://fairyeye.github.io/2023/06/05/MySQL/",
            "title": "MySQL",
            "date_published": "2023-06-05T05:49:50.602Z",
            "content_html": "<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tswid.OPERATION,</span><br><span class=\"line\">\tswid.DELIVERY_METHOD,</span><br><span class=\"line\">\tGROUP_CONCAT( DISTINCT( swid.WORK_ORDER_ID ) ) WORK_ORDER_ID </span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tSSME_WO_ISSUE_DETAIL swid </span><br><span class=\"line\">WHERE</span><br><span class=\"line\">\tswid.TENANT_ID = 4 </span><br><span class=\"line\">\tAND swid.WORK_ORDER_ID IN ( &#x27;42717.1&#x27;,&#x27;42719.1&#x27; ) </span><br><span class=\"line\">GROUP BY</span><br><span class=\"line\">\tswid.OPERATION,</span><br><span class=\"line\">\tswid.DELIVERY_METHOD</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbWlucWlsaWFuZy9wLzE2NTc3MTAyLmh0bWw=\">https://www.cnblogs.com/minqiliang/p/16577102.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3oxNTcxMTE4Nzc4Ny9hcnRpY2xlL2RldGFpbHMvMTI0OTg2MzA5\">https://blog.csdn.net/z15711187787/article/details/124986309</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTk5NDU3NS9hcnRpY2xlL2RldGFpbHMvMTIzMDcxOTA5P3NwbT0xMDAxLjIxMDEuMzAwMS42NjYxLjEmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19yZWxldmFudF90MC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUNUUkxJU1QlN0VSYXRlLTEtMTIzMDcxOTA5LWJsb2ctMTIzODIxMTg2LnQwX2VkdV9taXgmYW1wO2RlcHRoXzEtdXRtX3NvdXJjZT1kaXN0cmlidXRlLnBjX3JlbGV2YW50X3QwLm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQ1RSTElTVCU3RVJhdGUtMS0xMjMwNzE5MDktYmxvZy0xMjM4MjExODYudDBfZWR1X21peCZhbXA7dXRtX3JlbGV2YW50X2luZGV4PTE=\">https://blog.csdn.net/weixin_45994575/article/details/123071909?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-123071909-blog-123821186.t0_edu_mix&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-123071909-blog-123821186.t0_edu_mix&amp;utm_relevant_index=1</span></p>\n<p>部署记录</p>\n<h4 id=\"jdbctemplete批处理\"><a class=\"anchor\" href=\"#jdbctemplete批处理\">#</a> JDBCTemplete 批处理</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// sql语句</span><br><span class=\"line\">String sql = &quot;INSERT INTO ssme_iqc_change(TENANT_ID, KID) VALUE (?, ?);&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;String&gt; kids = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">// BatchPreparedStatementSetter 通过循环取出数据填充到SQL中</span><br><span class=\"line\">jdbcTemplate.batchUpdate(sql, new BatchPreparedStatementSetter() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void setValues(PreparedStatement ps, int i) throws SQLException &#123;</span><br><span class=\"line\">                ps.setLong(1, 4L);</span><br><span class=\"line\">                ps.setString(2, kids.get(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public int getBatchSize() &#123;</span><br><span class=\"line\">                return kids.size();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"mysql数据删除恢复\"><a class=\"anchor\" href=\"#mysql数据删除恢复\">#</a> MySQL 数据删除恢复</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 数据库中运行</span><br><span class=\"line\"># 判断binlog是否开启</span><br><span class=\"line\">show variables like &#x27;%log_bin%&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 找到数据库data位置</span><br><span class=\"line\">show variables like &#x27;datadir&#x27;;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>data 目录下数据  找到当天的 binlog<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2022/11/28/9c0f7495a6838922.png\" alt=\"\" /></li>\n</ul>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 转换为SQL 只转换操作时间内的数据即可</span><br><span class=\"line\">root@VM-4-10-ubuntu:/var/lib/mysql# mysqlbinlog --base64-output=decode-rows -v --database=smart-admin-dev --start-datetime=&quot;2022-11-28 10:50:00&quot; --stop-datetime=&quot;2022-11-28 11:00:00&quot; binlog.000018 &gt; 000018.sql</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>000018.sql<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2022/11/28/09e65127e32811f6.png\" alt=\"\" /></li>\n</ul>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 将SQL转换为insert语句</span><br><span class=\"line\">root@VM-4-10-ubuntu:/var/lib/mysql# cat 000018.sql | sed -n &#x27;/###/p&#x27; | sed &#x27;s/### //g;s/\\/\\*.*/,/g;s/DELETE FROM/;INSERT INTO/g;s/WHERE/SELECT/g;&#x27; |sed -r &#x27;s/(@17.*),/\\1;/g&#x27; | sed &#x27;s/@1=//g&#x27;| sed &#x27;s/@[1-9]=/,/g&#x27; | sed &#x27;s/@[1-9][0-9]=/,/g&#x27; &gt; 000018OK.sql</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>000018OK.sql<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2022/11/28/070cfb64cc8045dc.png\" alt=\"\" /></li>\n</ul>\n<p>最后将数据导入数据库即可。</p>\n<h3 id=\"group\"><a class=\"anchor\" href=\"#group\">#</a> Group</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 修改 group_concat 长度限制</span><br><span class=\"line\">SET GLOBAL group_concat_max_len=102400;</span><br><span class=\"line\">SET SESSION group_concat_max_len=102400;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mapper空指针\"><a class=\"anchor\" href=\"#mapper空指针\">#</a> Mapper 空指针</h3>\n<p>count sql resultType 为对象，导致报错</p>\n<h3 id=\"waiting-for-table-metadata-lock\"><a class=\"anchor\" href=\"#waiting-for-table-metadata-lock\">#</a> Waiting for table metadata lock</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ppYW5sb25nNzI3L2FydGljbGUvZGV0YWlscy8xMTE4NzcyMjY=\">https://blog.csdn.net/jianlong727/article/details/111877226</span></p>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Nacos/",
            "url": "https://fairyeye.github.io/2023/06/05/Nacos/",
            "title": "Nacos",
            "date_published": "2023-06-05T05:49:50.602Z",
            "content_html": "<h3 id=\"配置中心\"><a class=\"anchor\" href=\"#配置中心\">#</a> 配置中心</h3>\n<h5 id=\"1添加依赖\"><a class=\"anchor\" href=\"#1添加依赖\">#</a> 1. 添加依赖</h5>\n<p><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>nacos-config-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2启动类注解-nacospropertysource\"><a class=\"anchor\" href=\"#2启动类注解-nacospropertysource\">#</a> 2. 启动类注解 @NacosPropertySource</h5>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span>  </span><br><span class=\"line\"><span class=\"comment\">// dataId 对应配置管理-配置列表-dataId</span></span><br><span class=\"line\"><span class=\"meta\">@NacosPropertySource(dataId = &quot;nacosDemo&quot;, autoRefreshed = true)</span>  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NacosDemoApplication</span> &#123;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;  </span><br><span class=\"line\">        SpringApplication.run(NacosDemoApplication.class, args);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"3配置nacos地址\"><a class=\"anchor\" href=\"#3配置nacos地址\">#</a> 3. 配置 nacos 地址</h5>\n<p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span>  </span><br><span class=\"line\">    <span class=\"attr\">application:</span>  </span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nacos-demo</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"4使用配置\"><a class=\"anchor\" href=\"#4使用配置\">#</a> 4. 使用配置</h5>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span>  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CacheController</span> &#123;  </span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"meta\">@NacosValue(value = &quot;$&#123;useLocalCache:false&#125;&quot;, autoRefreshed = true)</span>  </span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> useLocalCache;  </span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">template</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;useLocalCache is %s!&quot;</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"meta\">@GetMapping(&quot;/cache&quot;)</span>  </span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">cache</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">      <span class=\"comment\">// 默认返回false</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> String.format(template, useLocalCache);  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 此时返回结果 ：useLocalCache is false!</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>增加配置并发布</li>\n</ul>\n<p><img data-src=\"https://s3.uuu.ovh/imgs/2022/11/30/d17d85b8702c1cc8.png\" alt=\"\" /></p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回结果 ：useLocalCache is true!</span></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "中间件"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/FileUtils/",
            "url": "https://fairyeye.github.io/2023/06/05/FileUtils/",
            "title": "",
            "date_published": "2023-06-05T05:49:50.601Z",
            "content_html": "<hr />\n<h2 id=\"title-工具类date-2020-04-20-110050categories-工具类\"><a class=\"anchor\" href=\"#title-工具类date-2020-04-20-110050categories-工具类\">#</a> title: 工具类<br />\n date: 2020-04-20 11:00:50<br />\ncategories: &quot;工具类&quot;</h2>\n<h3 id=\"数组转文件\"><a class=\"anchor\" href=\"#数组转文件\">#</a> 数组转文件</h3>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> bfile</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> filePath</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> fileName</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据byte数组，生成文件</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getFile</span><span class=\"params\">(<span class=\"type\">byte</span>[] bfile, String filePath,String fileName)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">BufferedOutputStream</span> <span class=\"variable\">bos</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"type\">File</span> <span class=\"variable\">file</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">File</span> <span class=\"variable\">dir</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(filePath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!dir.exists()&amp;&amp;dir.isDirectory())&#123;<span class=\"comment\">//判断文件目录是否存在</span></span><br><span class=\"line\">            dir.mkdirs();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        file = <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(filePath+<span class=\"string\">&quot;\\\\&quot;</span>+fileName);</span><br><span class=\"line\">        fos = <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(file);</span><br><span class=\"line\">        bos = <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedOutputStream</span>(fos);</span><br><span class=\"line\">        bos.write(bfile);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bos != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                bos.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e1) &#123;</span><br><span class=\"line\">                e1.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (fos != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                fos.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e1) &#123;</span><br><span class=\"line\">                e1.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Delete%20&%20Truncate/",
            "url": "https://fairyeye.github.io/2023/06/05/Delete%20&%20Truncate/",
            "title": "Delete/Truncate/Drop",
            "date_published": "2023-06-05T05:49:50.601Z",
            "content_html": "<p>假如把一张表比作一间教室，数据比作学生。</p>\n<p><code>drop</code>  就是把这件教师炸掉了，教室都没了，更不用说数据了。</p>\n<p><code>truncate</code>  就是把学生开除了，离开了，再也没有了。</p>\n<p><code>delete</code>  就是学生出去了，虽然他们可能不会回来了，但是位置还是要留着。</p>\n<h4 id=\"drop\"><a class=\"anchor\" href=\"#drop\">#</a> Drop</h4>\n<p>直接删掉表，这个没什么好说的。</p>\n<p>包括表结构，表数据，全部删除，占用的空间也会释放。</p>\n<h4 id=\"truncate\"><a class=\"anchor\" href=\"#truncate\">#</a> Truncate</h4>\n<p>截断表，会释放空间。</p>\n<h4 id=\"delete\"><a class=\"anchor\" href=\"#delete\">#</a> Delete</h4>\n<p>删除数据</p>\n",
            "tags": [
                "dairy"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96%E7%88%B6%E7%B1%BB%E5%AD%97%E6%AE%B5/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96%E7%88%B6%E7%B1%BB%E5%AD%97%E6%AE%B5/",
            "title": "反射",
            "date_published": "2023-06-05T01:28:10.956Z",
            "content_html": "<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class&lt;?&gt; superclass = itfBaseBO.getClass();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (!superclass.getName().equals(ExpandDomain.class.getName())) &#123;</span><br><span class=\"line\">    superclass = superclass.getSuperclass();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "学习笔记",
                "demo"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Ubuntu/",
            "url": "https://fairyeye.github.io/2023/06/05/Ubuntu/",
            "title": "Ubuntu",
            "date_published": "2023-06-05T01:28:10.953Z",
            "content_html": "<h3 id=\"netdata\"><a class=\"anchor\" href=\"#netdata\">#</a> NETDATA</h3>\n<h4 id=\"1-安装编译环境\"><a class=\"anchor\" href=\"#1-安装编译环境\">#</a> 1. 安装编译环境</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install zlib1g-dev gcc make git autoconf autogen automake pkg-config uuid-dev</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-克隆项目\"><a class=\"anchor\" href=\"#2-克隆项目\">#</a> 2. 克隆项目</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/firehol/netdata.git --depth=1</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-安装netdata\"><a class=\"anchor\" href=\"#3-安装netdata\">#</a> 3. 安装 netdata</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.cnblogs.com/beile/p/12875395.html</span><br><span class=\"line\"></span><br><span class=\"line\">官方：https://learn.netdata.cloud/docs/agent/packaging/installer/methods/offline</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">./netdata-installer.sh</span><br></pre></td></tr></table></figure></p>\n<p>然后访问  <code>IP:19999</code></p>\n<p><img data-src=\"https://i.loli.net/2020/09/23/Zp2AJqzlKPSaW7E.png\" alt=\"\" /></p>\n<h3 id=\"nginx\"><a class=\"anchor\" href=\"#nginx\">#</a> NGINX</h3>\n<h4 id=\"1-安装nginx\"><a class=\"anchor\" href=\"#1-安装nginx\">#</a> 1. 安装 Nginx</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">apt-get install nginx</span><br></pre></td></tr></table></figure></p>\n<p>浏览器地址栏输入  <code>IP</code>  看到如下页面表示已经安装好了 Nginx，如果有域名，输入域名也是同样的效果（前提是已经给域名添加了解析）</p>\n<p><img data-src=\"https://i.loli.net/2020/09/23/45jPeQEu2TCoOyb.png\" alt=\"\" /></p>\n<h4 id=\"2nginx-转发端口\"><a class=\"anchor\" href=\"#2nginx-转发端口\">#</a> 2.Nginx 转发端口</h4>\n<p>我已经在服务器上安装了 <code>netdata</code>  服务，端口为 <code>19999</code> , 但是通过 <code>Nginx</code>  访问服务器时默认是 <code>80</code>  端口，所以需要做一些配置，在我们输入域名的时候访问不同的端口。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># nginx.conf里包含\tinclude /etc/nginx/conf.d/*.conf; 所以可以在/etc/nginx/conf.d 文件夹下新增一个配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name IP;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">      client_max_body_size   3000m;</span><br><span class=\"line\">      proxy_next_upstream http_502 http_504 error timeout invalid_header;</span><br><span class=\"line\"></span><br><span class=\"line\">      proxy_set_header   Host $host;</span><br><span class=\"line\">      proxy_set_header   X-Real-IP $remote_addr;</span><br><span class=\"line\">      proxy_set_header   X-Real-PORT $remote_port;</span><br><span class=\"line\">      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\"></span><br><span class=\"line\">      proxy_pass http://127.0.0.1:19999;</span><br><span class=\"line\">      proxy_redirect default;</span><br><span class=\"line\">      proxy_connect_timeout 3000;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样 当我们在浏览器地址栏输入 域名时 就会自动跳转到 <code>netdata</code>  的主页</p>\n<h4 id=\"3-反向代理负载均衡\"><a class=\"anchor\" href=\"#3-反向代理负载均衡\">#</a> 3. 反向代理 + 负载均衡 =&gt;</h4>\n<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 实际服务</span></span><br><span class=\"line\">upstream web_servers &#123;</span><br><span class=\"line\">\tserver 192.168.139.128:9001;</span><br><span class=\"line\">\tserver 192.168.139.128:9002;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># 代理端口</span></span><br><span class=\"line\">\tlisten 10086;</span><br><span class=\"line\">\tserver_name 192.168.139.128;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\tproxy_pass http://web_servers;</span><br><span class=\"line\">\t\tproxy_set_header Host <span class=\"variable\">$host</span>:<span class=\"variable\">$server_port</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以部署两个服务 9001、9002 发布时，等上一个成功发布后，启动第二个。</span></span><br><span class=\"line\"><span class=\"comment\"># 未验证</span></span><br><span class=\"line\"><span class=\"comment\"># 加上systemclt管理Java服务</span></span><br><span class=\"line\"><span class=\"comment\"># 负载均衡的方式：https://mp.weixin.qq.com/s/yJyEwPkLD0V9G0451gbZYg</span></span><br><span class=\"line\"><span class=\"comment\"># 1.轮询；2.权重；3.ip_hash；4.fair；5.url_hash</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"时区\"><a class=\"anchor\" href=\"#时区\">#</a> 时区</h3>\n<pre><code>- https://blog.csdn.net/weixin_44109450/article/details/124259338\n- \n</code></pre>\n<h3 id=\"github\"><a class=\"anchor\" href=\"#github\">#</a> Github</h3>\n<pre><code>sudo vim /etc/hosts\n140.82.112.4 github.com  \n199.232.69.194 github.global.ssl.fastly.net\n</code></pre>\n<h3 id=\"内网穿透\"><a class=\"anchor\" href=\"#内网穿透\">#</a> 内网穿透</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. https://doc.natfrp.com/#/frpc/service/systemd</span><br><span class=\"line\">2. </span><br></pre></td></tr></table></figure></p>\n<h3 id=\"item2\"><a class=\"anchor\" href=\"#item2\">#</a> Item2</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://zhuanlan.zhihu.com/p/550022490</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"青龙\"><a class=\"anchor\" href=\"#青龙\">#</a> 青龙</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入青龙容器</span><br><span class=\"line\">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用systemctl管理服务\"><a class=\"anchor\" href=\"#使用systemctl管理服务\">#</a> 使用 systemctl 管理服务</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.jianshu.com/p/2deb0b79cb10</span><br><span class=\"line\"></span><br><span class=\"line\"># 路径</span><br><span class=\"line\">/etc/systemd/system</span><br><span class=\"line\"></span><br><span class=\"line\"># 日志</span><br><span class=\"line\">journalctl -u 服务名</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"arthas\"><a class=\"anchor\" href=\"#arthas\">#</a> Arthas</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://arthas.aliyun.com/doc/quick-start.html#_2-%E5%90%AF%E5%8A%A8-arthas</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[arthas@588425]$ watch net.lab1024.smartadmin.module.business.project.service.ProjectBaiscService queryProjects returnObj</span><br><span class=\"line\">Press Q or Ctrl+C to abort.</span><br><span class=\"line\">Affect(class count: 2 , method count: 2) cost in 170 ms, listenerId: 1</span><br><span class=\"line\">method=net.lab1024.smartadmin.module.business.project.service.ProjectBaiscService.queryProjects location=AtExit</span><br><span class=\"line\">ts=2022-11-28 20:11:49; [cost=37.212667ms] result=@ResponseDTO[</span><br><span class=\"line\">    code=@Integer[1],</span><br><span class=\"line\">    msg=@String[操作成功!],</span><br><span class=\"line\">    success=@Boolean[true],</span><br><span class=\"line\">    data=@ArrayList[isEmpty=false;size=13],</span><br><span class=\"line\">]</span><br><span class=\"line\">method=net.lab1024.smartadmin.module.business.project.service.ProjectBaiscService$$EnhancerBySpringCGLIB$$2f00139f.queryProjects location=AtExit</span><br><span class=\"line\">ts=2022-11-28 20:11:49; [cost=94.21994ms] result=@ResponseDTO[</span><br><span class=\"line\">    code=@Integer[1],</span><br><span class=\"line\">    msg=@String[操作成功!],</span><br><span class=\"line\">    success=@Boolean[true],</span><br><span class=\"line\">    data=@ArrayList[isEmpty=false;size=13],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"prometheus\"><a class=\"anchor\" href=\"#prometheus\">#</a> Prometheus</h3>\n<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># prometheus</span></span><br><span class=\"line\">wget https://github.com/prometheus/prometheus/releases/download/v2.40.4/prometheus-2.40.4.linux-amd64.tar.gz</span><br><span class=\"line\">tar -zxvf prometheus-2.40.4.linux-amd64.tar.gz</span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> prometheus-2.40.4.linux-amd64 /usr/local/prometheus</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">vim /usr/lib/systemd/system/prometheus.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=prometheus</span><br><span class=\"line\">After=network.target </span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">User=prometheus</span><br><span class=\"line\">Group=prometheus</span><br><span class=\"line\">WorkingDirectory=/usr/local/prometheus</span><br><span class=\"line\">ExecStart=/usr/local/prometheus/prometheus</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动并开启自启</span></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now prometheus\t\t\t\t\t\t\t\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h5>\n<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/gitee_go/deoloy</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\">tar -zxf output.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> target</span><br><span class=\"line\">pid=`ps -ef|grep xxx|grep -v grep|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$pid</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">kill</span> -15 <span class=\"variable\">$pid</span>  </span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> java -jar xxx.jar --server.port=8090 &amp;</span><br><span class=\"line\"><span class=\"comment\"># Ubuntu sh脚本不支持for循环  这里会报错</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>((i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">10</span>;i++));</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  new_pid=`ps -ef|grep xxx|grep -v grep|awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ ! <span class=\"variable\">$new_pid</span> ]</span><br><span class=\"line\">  <span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;starting......&#x27;</span></span><br><span class=\"line\">   <span class=\"built_in\">sleep</span> 10</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Deploy Success&quot;</span></span><br><span class=\"line\">   <span class=\"built_in\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;alias python=/usr/bin/python3&quot;</span> &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "系统集成"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Jmeter%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "url": "https://fairyeye.github.io/2023/06/05/Jmeter%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "title": "Jmeter",
            "date_published": "2023-06-05T01:28:10.950Z",
            "content_html": "<p><img data-src=\"https://i.loli.net/2021/08/18/7YTjKofu9SMPDWU.png\" alt=\"image-20210818195517502\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/08/18/hqIAWMJTpGnS4tB.png\" alt=\"image-20210818195538542\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/08/18/B73hXaVCULHQ4KN.png\" alt=\"image-20210818200759281\" /></p>\n",
            "tags": [
                "软件"
            ]
        }
    ]
}