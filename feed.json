{
    "version": "https://jsonfeed.org/version/1",
    "title": "人生当苦, 良人当归",
    "subtitle": "",
    "icon": "https://fairyeye.github.io/images/favicon.ico",
    "description": "我不过像你像他像那野草野花。",
    "home_page_url": "https://fairyeye.github.io",
    "items": [
        {
            "id": "https://fairyeye.github.io/2023/06/07/2023-06-07/",
            "url": "https://fairyeye.github.io/2023/06/07/2023-06-07/",
            "title": "",
            "date_published": "2023-06-07T13:29:01.504Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/GitHub%20Page/",
            "url": "https://fairyeye.github.io/2023/06/05/GitHub%20Page/",
            "title": "GitHub Page",
            "date_published": "2023-06-05T06:10:07.408Z",
            "content_html": "<p><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 拉取子模块</span></span><br><span class=\"line\">git submodule init // 初始化子模块</span><br><span class=\"line\">git submodule update // 更新子模块与主仓库中的子模块代码同步</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/WHEN%20YOU%20HAVE%20A%20NEW%20PC/",
            "url": "https://fairyeye.github.io/2023/06/05/WHEN%20YOU%20HAVE%20A%20NEW%20PC/",
            "title": "WHEN YOU HAVE A NEW PC",
            "date_published": "2023-06-05T05:49:50.604Z",
            "content_html": "<h3 id=\"center-when-you-have-a-new-pccenter\"><a class=\"anchor\" href=\"#center-when-you-have-a-new-pccenter\">#</a> &lt;center&gt; WHEN YOU HAVE A NEW PC&lt;/center&gt;</h3>\n<h4 id=\"java环境配置\"><a class=\"anchor\" href=\"#java环境配置\">#</a> Java 环境配置</h4>\n<h5 id=\"1-安装\"><a class=\"anchor\" href=\"#1-安装\">#</a> 1. 安装</h5>\n<p>​\t提前新建两个文件夹，jdk，jre，默认路径也可以</p>\n<p>​\t安装 <code>jdk-8u111-windows-x64.exe</code></p>\n<p>​\t设置 jdk、jre 的路径</p>\n<h5 id=\"2-配置环境变量\"><a class=\"anchor\" href=\"#2-配置环境变量\">#</a> 2. 配置环境变量</h5>\n<p>​\t右键此电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt;  <strong>系统变量 (S)</strong></p>\n<p>​\t只有系统变量才是全局的。</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新建\tCLASSPATH\t.;</span><br><span class=\"line\">新建\tJAVA_HOME\tjdk路径</span><br><span class=\"line\">修改\tpath\t\t添加 %JAVA_HOME%\\bin;</span><br><span class=\"line\"></span><br><span class=\"line\">测试\tjava -version</span><br><span class=\"line\">\t javac -version\t</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"maven环境配置\"><a class=\"anchor\" href=\"#maven环境配置\">#</a> Maven 环境配置</h4>\n<ol>\n<li>解压 <code>apache-maven-3.3.9.rar</code>  到指定的目录。</li>\n<li>修改配置文件（压缩包已修改过）。</li>\n</ol>\n<h4 id=\"git-工具\"><a class=\"anchor\" href=\"#git-工具\">#</a> GIT 工具</h4>\n<h5 id=\"1-全局配置用户信息\"><a class=\"anchor\" href=\"#1-全局配置用户信息\">#</a> 1. 全局配置用户信息</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;fairy&quot;</span><br><span class=\"line\">git config --global user.email &quot;fairy@gmail.com&quot;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"2-生成key\"><a class=\"anchor\" href=\"#2-生成key\">#</a> 2. 生成 key</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &#x27;email&#x27; // Email可选，会在key中生成你的邮箱信息  一直回车就行</span><br></pre></td></tr></table></figure></p>\n<p>​\t生成的 key 文件   <code>C:\\Users\\你的用户名\\.ssh\\id_rsa.pub</code></p>\n<p>​\t用文本编辑器打开，复制到 GIT 上。</p>\n<h5 id=\"3-上传项目到git\"><a class=\"anchor\" href=\"#3-上传项目到git\">#</a> 3. 上传项目到 GIT</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 项目文件加夹</span><br><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin git@github.com:fairyeye/StudyJava.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;Initial commit&quot;</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"mysql-安装\"><a class=\"anchor\" href=\"#mysql-安装\">#</a> MySQL 安装</h4>\n<p>安装 <code>https://www.runoob.com/mysql/mysql-install.html</code></p>\n<p>修改初始密码</p>\n<p>MySQL 版本 5.7.6 版本以前用户可以使用如下命令：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SET PASSWORD = PASSWORD(&#x27;your pwd&#x27;); </span><br></pre></td></tr></table></figure><br />\nMySQL 版本 5.7.6 版本开始的用户可以使用如下命令：<br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER USER USER() IDENTIFIED BY &#x27;your pwd&#x27;;</span><br></pre></td></tr></table></figure></p>\n<p>登录报错  <code>https://www.cnblogs.com/lifan1998/p/9177731.html</code></p>\n<h4 id=\"去图标\"><a class=\"anchor\" href=\"#去图标\">#</a> 去图标</h4>\n<p>​\t管理员运行   <code>去图标.bat</code>  文件。</p>\n<h4 id=\"谷歌访问助手\"><a class=\"anchor\" href=\"#谷歌访问助手\">#</a> 谷歌访问助手</h4>\n<p>​\t谷歌浏览器 -&gt; 更多工具 -&gt; 扩展程序 -&gt; 开发者模式 (打开) 。</p>\n<p>​\t拖动  <code>谷歌访问助手.crx</code>  到谷歌浏览器中。</p>\n<h4 id=\"软件安装清单\"><a class=\"anchor\" href=\"#软件安装清单\">#</a> 软件安装清单</h4>\n<ul>\n<li>\n<p>IDEA：</p>\n</li>\n<li>\n<p>Chrome：</p>\n</li>\n<li>\n<p>uTools：</p>\n</li>\n<li>\n<p>Typora：</p>\n</li>\n<li>\n<p>Another Redis Desktop Manager：很好看的 Redis 客户端</p>\n</li>\n<li>\n<p>XShell：好看 好用</p>\n</li>\n<li>\n<p>tabby-terminal：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0V1Z2VueS90YWJieS9yZWxlYXNlcy90YWcvdjEuMC4xNjQ=\">https://github.com/Eugeny/tabby/releases/tag/v1.0.164</span></p>\n</li>\n<li>\n<p>Shadowsocks：小飞机</p>\n</li>\n<li>\n<p>Windows Termial:Windows 终端</p>\n</li>\n<li>\n<ul>\n<li>nvm: Windows 切换 node 版本</li>\n</ul>\n</li>\n<li>\n<p>n：Mac 切换 node 版本</p>\n</li>\n<li>\n<p>pyenv：切换 python 版本</p>\n<ul>\n<li>Invoke-WebRequest -UseBasicParsing -Uri &quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3B5ZW52LXdpbi9weWVudi13aW4vbWFzdGVyL3B5ZW52LXdpbi9pbnN0YWxsLXB5ZW52LXdpbi5wczE=\">https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1</span>&quot; -OutFile &quot;./install-pyenv-win.ps1&quot;; &amp;&quot;./install-pyenv-win.ps1&quot;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mac\"><a class=\"anchor\" href=\"#mac\">#</a> Mac</h2>\n<h3 id=\"终端\"><a class=\"anchor\" href=\"#终端\">#</a> 终端：</h3>\n<h5 id=\"oh-my-zsh\"><a class=\"anchor\" href=\"#oh-my-zsh\">#</a> oh my zsh</h5>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://zhuanlan.zhihu.com/p/550022490</span><br><span class=\"line\">https://blog.csdn.net/weixin_42326144/article/details/121957795</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "杂谈"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Springboot%E8%BF%94%E5%9B%9Ehtml/",
            "url": "https://fairyeye.github.io/2023/06/05/Springboot%E8%BF%94%E5%9B%9Ehtml/",
            "title": "Springboot",
            "date_published": "2023-06-05T05:49:50.603Z",
            "content_html": "<h1 id=\"springboot返回html\"><a class=\"anchor\" href=\"#springboot返回html\">#</a> Springboot 返回 html</h1>\n<p>注：Springboot 的版本 2.1.3.RELEASE</p>\n<p><em>List-1</em> application.properties 文件</p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.<span class=\"property\">port</span>=<span class=\"number\">8080</span></span><br><span class=\"line\">#url中，项目的前缀</span><br><span class=\"line\">server.<span class=\"property\">servlet</span>.<span class=\"property\">context</span>-path=/project</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">spring.<span class=\"property\">mvc</span>.<span class=\"property\">view</span>.<span class=\"property\">prefix</span>=/</span><br><span class=\"line\">spring.<span class=\"property\">mvc</span>.<span class=\"property\">view</span>.<span class=\"property\">suffix</span>=.<span class=\"property\">html</span></span><br></pre></td></tr></table></figure></p>\n<p>整体结构如下图 1 所示，html 要放在 static 下，不是 templates 下</p>\n<p><img data-src=\"https://ask.qcloudimg.com/http-save/yehe-5089774/1k8adq8jn7.jpeg?imageView2/2/w/1620\" alt=\"img\" /></p>\n<p>图１</p>\n<p><em>List-2</em> HelloController 的内容如下</p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">extern</span>.<span class=\"property\">slf4j</span>.<span class=\"property\">Slf4j</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.<span class=\"property\">springframework</span>.<span class=\"property\">stereotype</span>.<span class=\"property\">Controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.<span class=\"property\">springframework</span>.<span class=\"property\">web</span>.<span class=\"property\">bind</span>.<span class=\"property\">annotation</span>.<span class=\"property\">RequestMapping</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"title class_\">Slf4</span>j</span><br><span class=\"line\">@<span class=\"title class_\">Controller</span></span><br><span class=\"line\">public <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"title class_\">RequestMapping</span>(value = <span class=\"string\">&quot;/hello&quot;</span>)</span><br><span class=\"line\">    public <span class=\"title class_\">String</span> <span class=\"title function_\">index</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        log.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;收到请求&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;html/hello&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><em>List-3</em> 启动 springboot，之后在浏览器中输入</p>\n<p><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#返回index.<span class=\"property\">html</span>的内容</span><br><span class=\"line\"><span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8080/project/</span></span><br><span class=\"line\"></span><br><span class=\"line\">#返回hello.<span class=\"property\">html</span>的内容</span><br><span class=\"line\"><span class=\"attr\">http</span>:<span class=\"comment\">//localhost:8080/project/hello</span></span><br></pre></td></tr></table></figure></p>\n<p>网上很多关于模板的（Thymeleaf 、FreeMarker 等），但是我不需要，我只需要纯的 html。</p>\n<p>index.html 是 springboot 的默认 welcome page。</p>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lYjRjMGZjMmRmYzQ=\">https://www.jianshu.com/p/eb4c0fc2dfc4</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNwcmluZy5pby9zcHJpbmctYm9vdC9kb2NzL2N1cnJlbnQvcmVmZXJlbmNlL2h0bWxzaW5nbGUvI2Jvb3QtZmVhdHVyZXMtc3ByaW5nLW12Yy1zdGF0aWMtY29udGVudA==\">https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-spring-mvc-static-content</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnNwcmluZy5pby9zcHJpbmctYm9vdC9kb2NzL2N1cnJlbnQvcmVmZXJlbmNlL2h0bWxzaW5nbGUvI2Jvb3QtZmVhdHVyZXMtc3ByaW5nLW12Yy13ZWxjb21lLXBhZ2U=\">https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-spring-mvc-welcome-page</span></li>\n</ol>\n<p>​     (adsbygoogle = window.adsbygoogle || []).push({});</p>\n",
            "tags": [
                "基础"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E4%BB%A5%E4%B8%8B%E7%9F%A5%E8%AF%86/",
            "url": "https://fairyeye.github.io/2023/06/05/%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E4%BB%A5%E4%B8%8B%E7%9F%A5%E8%AF%86/",
            "title": "需要掌握以下知识",
            "date_published": "2023-06-05T05:49:50.603Z",
            "content_html": "<ol>\n<li>\n<p>导入数据<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/01/18/7595fe99b5f3116a.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>匹配规则<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/01/18/0cb7d29296c95699.png\" alt=\"\" /><br />\n 3. 生成报告和数据<br />\n<img data-src=\"https://s3.bmp.ovh/imgs/2023/01/18/9f9bd4684069b961.png\" alt=\"\" /></p>\n</li>\n</ol>\n<p>作为一名三年经验的 Java 开发人员，你需要掌握以下知识：</p>\n<ol>\n<li>\n<p>Java 基础知识：掌握 Java 的基本语法、面向对象编程、常用数据结构和算法等，能够熟练使用 Java 语言进行开发。</p>\n</li>\n<li>\n<p>Java Web 开发框架：熟悉 Spring、SpringMVC 和 MyBatis 等主流的 Java Web 开发框架，能够使用这些框架进行 Web 应用程序的开发。</p>\n</li>\n<li>\n<p>数据库知识：熟悉关系型数据库和 NoSQL 数据库的使用，掌握 SQL 语言和数据库设计的基本知识。</p>\n</li>\n<li>\n<p>Web 前端技术：熟悉 HTML、CSS、JavaScript、jQuery 等前端开发技术，能够与前端开发人员协同工作，完成 Web 应用程序的前后端分离开发。</p>\n</li>\n<li>\n<p>网络编程知识：熟悉 TCP/IP 协议、HTTP 协议等网络编程相关的知识，能够使用 Java 进行网络编程开发。</p>\n</li>\n<li>\n<p>分布式系统开发：了解分布式系统的基本概念和原理，熟悉 Spring Cloud、Dubbo 等分布式系统开发框架，能够进行分布式系统的设计和开发。</p>\n</li>\n<li>\n<p>微服务架构：了解微服务架构的基本概念和原理，熟悉 Spring Boot、Spring Cloud 等微服务开发框架，能够进行微服务的设计和开发。</p>\n</li>\n<li>\n<p>工具和技术：掌握 Maven、Git、Jenkins 等常用的工具和技术，能够进行代码管理、构建和部署。</p>\n</li>\n<li>\n<p>技术栈扩展：根据自身的兴趣和职业发展需求，了解其他的 Java 技术栈，例如大数据处理、人工智能、区块链等，不断扩展自己的技术领域。</p>\n</li>\n</ol>\n<p>除了以上技术知识，你还需要具备良好的团队协作能力、学习能力和解决问题的能力，能够快速适应不同的项目需求和开发环境，不断提升自己的技术水平和职业素养。</p>\n",
            "tags": [
                "学习"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%89%8B%E5%86%8C/",
            "url": "https://fairyeye.github.io/2023/06/05/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%89%8B%E5%86%8C/",
            "title": "",
            "date_published": "2023-06-05T01:28:10.959Z",
            "content_html": "<p><img src=\"https://i.loli.net/2020/07/16/ZXJmPqvfo2W6U9p.png\"></p>\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AC%94%E8%AE%B0/",
            "url": "https://fairyeye.github.io/2023/06/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%AC%94%E8%AE%B0/",
            "title": "",
            "date_published": "2023-06-05T01:28:10.958Z",
            "content_html": "<p>设计模式遵循六⼤原则；单⼀职责( ⼀个类和⽅法只做⼀件事 )、⾥⽒替换( 多态，⼦类可扩展⽗类 )、依赖 倒置( 细节依赖抽象，下层依赖上层 )、接⼝隔离( 建⽴单⼀接⼝ )、迪⽶特原则( 最少知道，降低耦合 )、开闭 原则( 抽象架构，扩展实现 ）。</p>\n<h2 id=\"1-工厂模式\"><a href=\"#1-工厂模式\" class=\"headerlink\" title=\"1. 工厂模式\"></a>1. 工厂模式</h2><p>举个例子：</p>\n<p>吃：南方人爱吃饭，北方人爱吃面</p>\n<p>定义一个接口：吃</p>\n<p>定义两个实现类继承吃：饭、面</p>\n<p>定义一个工厂：饭店</p>\n<p>饭店通过判断是南方人还是北方人返回不同的实现类，从而让不同的人吃到了不同的饭</p>\n<h2 id=\"2-抽象工厂模式\"><a href=\"#2-抽象工厂模式\" class=\"headerlink\" title=\"2.抽象工厂模式\"></a>2.抽象工厂模式</h2><h2 id=\"3-建造者模式\"><a href=\"#3-建造者模式\" class=\"headerlink\" title=\"3.建造者模式\"></a>3.建造者模式</h2><p>实体类的<code>setXxx()</code>方法，一般是返回<code>void</code>，可以改造为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> ObjectX <span class=\"title function_\">setXxx</span><span class=\"params\">(String xx)</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">this</span>.xxx = xx</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-原型模式\"><a href=\"#4-原型模式\" class=\"headerlink\" title=\"4. 原型模式\"></a>4. 原型模式</h2><p>考卷题目和答案乱序。</p>\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E6%90%AD%E5%BB%BASSR%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "url": "https://fairyeye.github.io/2023/06/05/%E6%90%AD%E5%BB%BASSR%E6%9C%8D%E5%8A%A1%E5%99%A8/",
            "title": "",
            "date_published": "2023-06-05T01:28:10.957Z",
            "content_html": "<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install git </span><br><span class=\"line\">报错：Temporary failure resolving &#x27;archive.ubuntu.com</span><br><span class=\"line\">具体如下：</span><br><span class=\"line\"></span><br><span class=\"line\">Ign:1 http://archive.ubuntu.com/ubuntu xenial/main i386 liberror-perl all 0.17-1.2</span><br><span class=\"line\">Ign:2 http://archive.ubuntu.com/ubuntu xenial/main i386 git-man all 1:2.7.4-0ubuntu1</span><br><span class=\"line\">Err:3 http://archive.ubuntu.com/ubuntu xenial/main amd64 git amd64 1:2.7.4-0ubuntu1</span><br><span class=\"line\">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">Err:1 http://archive.ubuntu.com/ubuntu xenial/main i386 liberror-perl all 0.17-1.2</span><br><span class=\"line\">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">Err:2 http://archive.ubuntu.com/ubuntu xenial/main i386 git-man all 1:2.7.4-0ubuntu1</span><br><span class=\"line\">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">E: Failed to fetch http://archive.ubuntu.com/ubuntu/pool/main/libe/liberror-perl/liberror-perl_0.17-1.2_all.deb  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">E: Failed to fetch http://archive.ubuntu.com/ubuntu/pool/main/g/git/git-man_2.7.4-0ubuntu1_all.deb  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">E: Failed to fetch http://archive.ubuntu.com/ubuntu/pool/main/g/git/git_2.7.4-0ubuntu1_amd64.deb  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?</span><br><span class=\"line\">root@132157:~# apt-get update</span><br><span class=\"line\">Err:1 http://security.ubuntu.com/ubuntu xenial-security InRelease</span><br><span class=\"line\">  Temporary failure resolving &#x27;security.ubuntu.com&#x27;</span><br><span class=\"line\">Err:2 http://archive.ubuntu.com/ubuntu xenial InRelease</span><br><span class=\"line\">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">Err:3 http://archive.ubuntu.com/ubuntu xenial-updates InRelease</span><br><span class=\"line\">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">Err:4 http://archive.ubuntu.com/ubuntu xenial-backports InRelease</span><br><span class=\"line\">  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">W: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/xenial/InRelease  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">W: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/xenial-updates/InRelease  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">W: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/xenial-backports/InRelease  Temporary failure resolving &#x27;archive.ubuntu.com&#x27;</span><br><span class=\"line\">W: Failed to fetch http://security.ubuntu.com/ubuntu/dists/xenial-security/InRelease  Temporary failure resolving &#x27;security.ubuntu.com&#x27;</span><br><span class=\"line\">W: Some index files failed to download. They have been ignored, or old ones used instead.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>原因是DNS未配置</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">+ nameserver 202.96.134.133</span><br><span class=\"line\">+ nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>\n\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/",
            "title": "查询优化",
            "date_published": "2023-06-05T01:28:10.956Z",
            "content_html": "<p>MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回 N 行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 反例（耗时129.570s）</span><br><span class=\"line\">select * from task_result LIMIT 20000000, 10;</span><br><span class=\"line\"></span><br><span class=\"line\"># 正例（耗时5.114s）</span><br><span class=\"line\">SELECT a.* FROM task_result a, (select id from task_result LIMIT 20000000, 10) b where a.id = b.id;</span><br><span class=\"line\"></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">task_result表为生产环境的一个表，总数据量为3400万，id为主键，偏移量达到2000万</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"获取一条数据时的Limit-1\"><a href=\"#获取一条数据时的Limit-1\" class=\"headerlink\" title=\"获取一条数据时的Limit 1\"></a>获取一条数据时的Limit 1</h3><p>在很多情况下我们已知数据仅存在一条，此时我们应该告知数据库只用查一条，否则将会转化为全表扫描</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 反例（耗时2424.612s）</span><br><span class=\"line\">select * from task_result where unique_key = &#x27;ebbf420b65d95573db7669f21fa3be3e_861414030800727_48&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 正例（耗时1.036s）</span><br><span class=\"line\">select * from task_result where unique_key = &#x27;ebbf420b65d95573db7669f21fa3be3e_861414030800727_48&#x27; LIMIT 1;</span><br><span class=\"line\"></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">task_result表为生产环境的一个表，总数据量为3400万，where条件非索引字段，数据所在行为第19486条记录</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"批量插入\"><a href=\"#批量插入\" class=\"headerlink\" title=\"批量插入\"></a>批量插入</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 反例</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;A&#x27;,24)</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;B&#x27;,24)</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;C&#x27;,24)</span><br><span class=\"line\"></span><br><span class=\"line\"># 正例</span><br><span class=\"line\">INSERT into person(name,age) values(&#x27;A&#x27;,24),(&#x27;B&#x27;,24),(&#x27;C&#x27;,24);</span><br><span class=\"line\"></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">比较常规，就不多做说明了</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n<p><a href=\"https://juejin.im/post/5ea16dede51d45470b4ffc5b?utm_source=gold_browser_extension\">https://juejin.im/post/5ea16dede51d45470b4ffc5b?utm_source=gold_browser_extension</a></p>\n",
            "tags": [
                "mysql",
                "mysql"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
            "title": "单例模式",
            "date_published": "2023-06-05T01:28:10.956Z",
            "content_html": "<h4 id=\"1-最简单的单例模式：\"><a href=\"#1-最简单的单例模式：\" class=\"headerlink\" title=\"1. 最简单的单例模式：\"></a>1. 最简单的单例模式：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.JUC.thread;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * @author huapeng.zhang</span><br><span class=\"line\"> * @version 1.0</span><br><span class=\"line\"> * @date 2020/9/17 18:28</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class SingletomDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static SingletomDemo singletomDemo = null;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private SingletomDemo() &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + &quot;\\t 我是构造方法SingletomDemo()！&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static SingletomDemo getInstance() &#123;</span><br><span class=\"line\">        if (singletomDemo == null) &#123;</span><br><span class=\"line\">        \t\tsingletomDemo = new SingletomDemo();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return singletomDemo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        // 单线程</span><br><span class=\"line\">        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在单线程的情况下，打印结果如下：</p>\n<p><img src=\"https://i.loli.net/2020/09/17/J9rb5oynQclfD4d.png\" alt=\"image-20200917191550283\"></p>\n<p>可以看到，虽然我们一共调用了六次<code>getInstance()</code>， 但是只打印了一次构造方法输出内容，也就是只调用了一个构造函数，所获得的对象地址自然是一样的。</p>\n<h4 id=\"2-多线程下的单例模式\"><a href=\"#2-多线程下的单例模式\" class=\"headerlink\" title=\"2. 多线程下的单例模式\"></a>2. 多线程下的单例模式</h4><p>我们对<code>main()</code>方法做一下改造，改造后的代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\">    // 改为多线程后 可能多次调用构造函数</span><br><span class=\"line\">    for (int i = 0; i &lt; 10; i++) &#123;</span><br><span class=\"line\">        new Thread(() -&gt; &#123;</span><br><span class=\"line\">            SingletomDemo.getInstance();</span><br><span class=\"line\">        &#125;, String.valueOf(i)).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>打印结果为：</p>\n<p><img src=\"https://i.loli.net/2020/09/17/Q7RWYjayOgoXfH1.png\" alt=\"image-20200917192220270\"></p>\n<p>多次执行下可以看到打印的次数是不同的。</p>\n<p>可以对<code>getInstance()</code>方法添加<code>synchronized</code>加锁，保证只生成一个实例。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private static synchronized SingletomDemo getInstance() &#123;</span><br><span class=\"line\">    if (singletomDemo == null) &#123;</span><br><span class=\"line\">    \t\tsingletomDemo = new SingletomDemo();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return singletomDemo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再次执行程序发现只打印了一次构造方法输出函数，还有另外一种方法就是<code>DCL：double check locks双端检测模式</code>模式也可以达到同样的目的。</p>\n<h4 id=\"3-DCL-单例模式\"><a href=\"#3-DCL-单例模式\" class=\"headerlink\" title=\"3.DCL + 单例模式\"></a>3.DCL + 单例模式</h4><p>我们再次对<code>getInstance()</code>方法进行改造，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// DCL模式(double check locks双端检测模式)</span><br><span class=\"line\">private static SingletomDemo getInstance() &#123;</span><br><span class=\"line\">    if (singletomDemo == null) &#123;</span><br><span class=\"line\">        synchronized (SingletomDemo.class) &#123;</span><br><span class=\"line\">            if (singletomDemo == null) &#123;</span><br><span class=\"line\">                singletomDemo = new SingletomDemo();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return singletomDemo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当我们的单例模式写到这种程度的时候，基本可以应对99%的情况，但是由于<code>指令排序</code>的存在，还是有可能会出现问题。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">memory = allocate(); //1.分配对象内存空间</span><br><span class=\"line\">instance(memory);    //2.初始化对象</span><br><span class=\"line\">instance = memory;   //3.设置instance指向刚分配的内存地址，此时instance!=null</span><br></pre></td></tr></table></figure>\n\n<p>步骤2、3不存在数据依赖，所以由于指令重排的关系，可能会出现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">memory = allocate(); //1.分配对象内存空间</span><br><span class=\"line\">instance = memory;   //3.设置instance指向刚分配的内存地址，此时instance!=null</span><br><span class=\"line\">instance(memory);    //2.初始化对象</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"4-Volatile-单例模式\"><a href=\"#4-Volatile-单例模式\" class=\"headerlink\" title=\"4.Volatile + 单例模式\"></a>4.Volatile + 单例模式</h4><p>我们在声明 <code>singletomDemo</code>时，加上<code>Volatile</code>关键字修饰，就可以达到完美的效果。</p>\n<p>最终代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.example.demo.JUC.thread;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * @author huapeng.zhang</span><br><span class=\"line\"> * @version 1.0</span><br><span class=\"line\"> * @date 2020/9/17 18:28</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class SingletomDemo &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static volatile SingletomDemo singletomDemo = null;</span><br><span class=\"line\"></span><br><span class=\"line\">    private SingletomDemo() &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + &quot;\\t 我是构造方法SingletomDemo()！&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // DCL模式(double check locks双端检测模式)</span><br><span class=\"line\">    private static SingletomDemo getInstance() &#123;</span><br><span class=\"line\">        if (singletomDemo == null) &#123;</span><br><span class=\"line\">            synchronized (SingletomDemo.class) &#123;</span><br><span class=\"line\">                if (singletomDemo == null) &#123;</span><br><span class=\"line\">                    singletomDemo = new SingletomDemo();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return singletomDemo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        // 单线程</span><br><span class=\"line\">//        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">//        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\">//        System.out.println(SingletomDemo.getInstance() == SingletomDemo.getInstance());</span><br><span class=\"line\"></span><br><span class=\"line\">//         改为多线程后 可能多次调用构造函数</span><br><span class=\"line\">//         可以在 getInstance上加SYNC解决问题</span><br><span class=\"line\">        for (int i = 0; i &lt; 10; i++) &#123;</span><br><span class=\"line\">            new Thread(() -&gt; &#123;</span><br><span class=\"line\">                SingletomDemo.getInstance();</span><br><span class=\"line\">            &#125;, String.valueOf(i)).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "学习笔记",
                "demo"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96%E7%88%B6%E7%B1%BB%E5%AD%97%E6%AE%B5/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96%E7%88%B6%E7%B1%BB%E5%AD%97%E6%AE%B5/",
            "title": "反射",
            "date_published": "2023-06-05T01:28:10.956Z",
            "content_html": "<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Class&lt;?&gt; superclass = itfBaseBO.getClass();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (!superclass.getName().equals(ExpandDomain.class.getName())) &#123;</span><br><span class=\"line\">    superclass = superclass.getSuperclass();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "学习笔记",
                "demo"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E5%90%8C%E6%AD%A5%E4%B8%8D%E5%90%8C%E6%9C%8D%E5%8A%A1%E7%9A%84MySQL%E6%95%B0%E6%8D%AE%E8%A1%A8/",
            "url": "https://fairyeye.github.io/2023/06/05/%E5%90%8C%E6%AD%A5%E4%B8%8D%E5%90%8C%E6%9C%8D%E5%8A%A1%E7%9A%84MySQL%E6%95%B0%E6%8D%AE%E8%A1%A8/",
            "title": "",
            "date_published": "2023-06-05T01:28:10.956Z",
            "content_html": "<h4 id=\"1-查询数据库是否启用-FEDERATED引擎\"><a href=\"#1-查询数据库是否启用-FEDERATED引擎\" class=\"headerlink\" title=\"1.查询数据库是否启用 FEDERATED引擎\"></a>1.查询数据库是否启用 <strong>FEDERATED</strong>引擎</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW ENGINES;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2020/10/26/NmkbpSugEsld1rJ.png\"></p>\n<p>如果<code>Support</code> 为<code>NO</code>需要改为<code>YES</code> ，只需要修改自己的数据库，目标数据库无需修改。</p>\n<h4 id=\"2-建立数据库\"><a href=\"#2-建立数据库\" class=\"headerlink\" title=\"2.建立数据库\"></a>2.建立数据库</h4><p>自建表引擎一般为<code>InnoDB</code>，建立远程数据表示需要修改为<code>FEDERATED</code></p>\n<p>建立与目标 表一样的表结构  替换引擎为<code>FEDERATED</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ENGINE=FEDERATED CONNECTION=&#x27;mysql://#&#123;userName&#125;:#&#123;passwd&#125;@#&#123;IP&#125;:#&#123;PORT&#125;/#&#123;数据库&#125;/#&#123;表&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98/",
            "url": "https://fairyeye.github.io/2023/06/05/%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98/",
            "title": "Transactional注解",
            "date_published": "2023-06-05T01:28:10.955Z",
            "content_html": "<p>方法A中调用B后再调用C,三个方法中均有插入数据后再查询数据</p>\n<p>B方法的注解：@Transactional(propagation&#x3D;Propagation.REQUIRES_NEW) –不管是否存在事务,都创建一个新的事务,原来的挂起,新的执行完毕,继续执行老的事务</p>\n<p>C方法的注解：@Transactional(propagation&#x3D;Propagation.REQUIRED) –如果有事务,那么加入事务,没有的话新建一个</p>\n<p>1、当方法B或者C报错时，A、B、C方法都回滚</p>\n<p>2、当方法A、B、C异常被捕获时，A、B、C事务不回滚（a、b、c均入库）</p>\n<p>3、当方法BC执行后，方法A报错时，A、C事务回滚，B事务不回滚（b数据入库）</p>\n<p>A方法向表中添加数据a，在查询该表能得到数据a</p>\n<p>B方法向表中添加数据b，再查询该表能得到数据b</p>\n<p>C方法向表中添加数据c，再查询该表能得到数据a，b，c</p>\n<p>带有注解@Transactional(propagation&#x3D;Propagation.REQUIRES_NEW)的方法走完之后，数据就会被提交入库</p>\n<p>另外需要注意方法内部调用@Transactional(propagation&#x3D;Propagation.REQUIRES_NEW)注解不生效，比如A和B都在同一个方法中，A调用B，B方法是此注解，则不生效。同样，AOP拦截也拦截不到B</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public enum Propagation &#123;</span><br><span class=\"line\">    REQUIRED(0),</span><br><span class=\"line\">    SUPPORTS(1),</span><br><span class=\"line\">    MANDATORY(2),</span><br><span class=\"line\">    REQUIRES_NEW(3),</span><br><span class=\"line\">    NOT_SUPPORTED(4),</span><br><span class=\"line\">    NEVER(5),</span><br><span class=\"line\">    NESTED(6);</span><br><span class=\"line\"></span><br><span class=\"line\">    private final int value;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Propagation(int value) &#123;</span><br><span class=\"line\">        this.value = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public int value() &#123;</span><br><span class=\"line\">        return this.value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>七种事物传播类型 默认为：<code>REQUIRED</code></p>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/StringToInteger/",
            "url": "https://fairyeye.github.io/2023/06/05/StringToInteger/",
            "title": "",
            "date_published": "2023-06-05T01:28:10.953Z",
            "content_html": "<!DOCTYPE html>\n<html>\n    <head>\n        <title>页面标题</title>\n        <style>\n        body {        background-image: url(\"../640.png\"); } \n        </style>\n    </head>\n<body> \n\n<h1 id=\"String-转-Integer\"><a href=\"#String-转-Integer\" class=\"headerlink\" title=\"String 转 Integer\"></a>String 转 Integer</h1><h2 id=\"1-Integer的parseInt方法\"><a href=\"#1-Integer的parseInt方法\" class=\"headerlink\" title=\"1.Integer的parseInt方法\"></a>1.Integer的parseInt方法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;123&quot;;</span><br><span class=\"line\">int value = Integer.parseInt(string);</span><br><span class=\"line\">System.out.println(&quot;stringToInt----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：StringToInt----------&gt;123</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-Integer的valueOf方法\"><a href=\"#2-Integer的valueOf方法\" class=\"headerlink\" title=\"2.Integer的valueOf方法\"></a>2.Integer的valueOf方法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;123&quot;;</span><br><span class=\"line\">Integer value = Integer.valueOf(string);</span><br><span class=\"line\">System.out.println(&quot;stringToInt1----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：StringToInt1----------&gt;123</span><br></pre></td></tr></table></figure>\n\n<p>以上两种方法都是可行的。</p>\n<p>但是会有特殊的情况，比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">int value = Integer.parseInt(string);</span><br><span class=\"line\">System.out.println(&quot;stringToInt----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;abc&quot;</span><br><span class=\"line\">\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:580)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:615)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.stringToInt(StringToInt.java:16)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.main(StringToInt.java:10)</span><br></pre></td></tr></table></figure>\n\n<p>使用stringToInt1()也会返回同样的错误。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static Integer valueOf(String s) throws NumberFormatException &#123;</span><br><span class=\"line\">    return Integer.valueOf(parseInt(s, 10));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>valueOf()调用了parseInt()，所以返回同样的错误是正常的。</p>\n<p>按照正常的逻辑来说，我们需要对这个错误进行处理，比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">int value = 0;</span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">    value = Integer.parseInt(string);</span><br><span class=\"line\">&#125; catch (NumberFormatException e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(&quot;StringToInt----------&gt;&quot;+value);</span><br><span class=\"line\"></span><br><span class=\"line\">结果：</span><br><span class=\"line\">java.lang.NumberFormatException: For input string: &quot;abc&quot;</span><br><span class=\"line\">\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:580)</span><br><span class=\"line\">\tat java.lang.Integer.parseInt(Integer.java:615)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.stringToInt(StringToInt.java:18)</span><br><span class=\"line\">\tat com.hand.todo.infra.util.StringToInt.main(StringToInt.java:10)</span><br><span class=\"line\">StringToInt----------&gt;0</span><br></pre></td></tr></table></figure>\n\n<p>可以看到，虽然依然报错，但是程序还是继续执行了。</p>\n<p>然后回到主题。</p>\n<h2 id=\"3-Guava-的-Ints-结合-Java8-的-Optional\"><a href=\"#3-Guava-的-Ints-结合-Java8-的-Optional\" class=\"headerlink\" title=\"3.Guava 的 Ints 结合 Java8 的 Optional\"></a>3.Guava 的 Ints 结合 Java8 的 Optional</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">Integer value = Optional.ofNullable(string)</span><br><span class=\"line\">        .map(Ints::tryParse)</span><br><span class=\"line\">        .orElse(0);</span><br><span class=\"line\"> System.out.println(&quot;StringToInt2----------&gt;&quot; + value);</span><br><span class=\"line\"> </span><br><span class=\"line\"> 结果：StringToInt2----------&gt;0</span><br></pre></td></tr></table></figure>\n\n<p>可以在转换失败的时候为他设置默认值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String string = &quot;abc&quot;;</span><br><span class=\"line\">Integer value = Optional.ofNullable(string)</span><br><span class=\"line\">        .map(Ints::tryParse)</span><br><span class=\"line\">        .orElse(100);</span><br><span class=\"line\"> System.out.println(&quot;StringToInt2----------&gt;&quot; + value);</span><br><span class=\"line\"> </span><br><span class=\"line\"> 结果：StringToInt2----------&gt;100</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>写在末尾：之所以写这么详细是因为最开始的时候我很菜，看别人写的文档都很简单，虽然可以解决问题，但是却不解其意，所以写的啰嗦一点，对新手比较友好。</strong></p>\n<p>​\t</body></p>\n</html>",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Ubuntu/",
            "url": "https://fairyeye.github.io/2023/06/05/Ubuntu/",
            "title": "Ubuntu",
            "date_published": "2023-06-05T01:28:10.953Z",
            "content_html": "<h3 id=\"NETDATA\"><a href=\"#NETDATA\" class=\"headerlink\" title=\"NETDATA\"></a>NETDATA</h3><h4 id=\"1-安装编译环境\"><a href=\"#1-安装编译环境\" class=\"headerlink\" title=\"1. 安装编译环境\"></a>1. 安装编译环境</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install zlib1g-dev gcc make git autoconf autogen automake pkg-config uuid-dev</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-克隆项目\"><a href=\"#2-克隆项目\" class=\"headerlink\" title=\"2. 克隆项目\"></a>2. 克隆项目</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/firehol/netdata.git --depth=1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-安装netdata\"><a href=\"#3-安装netdata\" class=\"headerlink\" title=\"3. 安装netdata\"></a>3. 安装netdata</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.cnblogs.com/beile/p/12875395.html</span><br><span class=\"line\"></span><br><span class=\"line\">官方：https://learn.netdata.cloud/docs/agent/packaging/installer/methods/offline</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">./netdata-installer.sh</span><br></pre></td></tr></table></figure>\n\n<p>然后访问 <code>IP:19999</code> </p>\n<p><img src=\"https://i.loli.net/2020/09/23/Zp2AJqzlKPSaW7E.png\"></p>\n<h3 id=\"NGINX\"><a href=\"#NGINX\" class=\"headerlink\" title=\"NGINX\"></a>NGINX</h3><h4 id=\"1-安装Nginx\"><a href=\"#1-安装Nginx\" class=\"headerlink\" title=\"1. 安装Nginx\"></a>1. 安装Nginx</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">apt-get install nginx</span><br></pre></td></tr></table></figure>\n\n<p>浏览器地址栏输入 <code>IP</code>看到如下页面表示已经安装好了Nginx，如果有域名，输入域名也是同样的效果（前提是已经给域名添加了解析）</p>\n<p><img src=\"https://i.loli.net/2020/09/23/45jPeQEu2TCoOyb.png\"></p>\n<h4 id=\"2-Nginx-转发端口\"><a href=\"#2-Nginx-转发端口\" class=\"headerlink\" title=\"2.Nginx 转发端口\"></a>2.Nginx 转发端口</h4><p>我已经在服务器上安装了<code>netdata</code>服务，端口为<code>19999</code>,但是通过<code>Nginx</code>访问服务器时默认是<code>80</code>端口，所以需要做一些配置，在我们输入域名的时候访问不同的端口。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># nginx.conf里包含\tinclude /etc/nginx/conf.d/*.conf; 所以可以在/etc/nginx/conf.d 文件夹下新增一个配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name IP;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">      client_max_body_size   3000m;</span><br><span class=\"line\">      proxy_next_upstream http_502 http_504 error timeout invalid_header;</span><br><span class=\"line\"></span><br><span class=\"line\">      proxy_set_header   Host $host;</span><br><span class=\"line\">      proxy_set_header   X-Real-IP $remote_addr;</span><br><span class=\"line\">      proxy_set_header   X-Real-PORT $remote_port;</span><br><span class=\"line\">      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\"></span><br><span class=\"line\">      proxy_pass http://127.0.0.1:19999;</span><br><span class=\"line\">      proxy_redirect default;</span><br><span class=\"line\">      proxy_connect_timeout 3000;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>这样 当我们在浏览器地址栏输入 域名时 就会自动跳转到<code>netdata</code>的主页</p>\n<h4 id=\"3-反向代理-负载均衡-x3D-gt\"><a href=\"#3-反向代理-负载均衡-x3D-gt\" class=\"headerlink\" title=\"3. 反向代理+负载均衡 &#x3D;&gt;\"></a>3. 反向代理+负载均衡 &#x3D;&gt;</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 实际服务</span></span><br><span class=\"line\">upstream web_servers &#123;</span><br><span class=\"line\">\tserver 192.168.139.128:9001;</span><br><span class=\"line\">\tserver 192.168.139.128:9002;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># 代理端口</span></span><br><span class=\"line\">\tlisten 10086;</span><br><span class=\"line\">\tserver_name 192.168.139.128;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\tproxy_pass http://web_servers;</span><br><span class=\"line\">\t\tproxy_set_header Host <span class=\"variable\">$host</span>:<span class=\"variable\">$server_port</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以部署两个服务 9001、9002 发布时，等上一个成功发布后，启动第二个。</span></span><br><span class=\"line\"><span class=\"comment\"># 未验证</span></span><br><span class=\"line\"><span class=\"comment\"># 加上systemclt管理Java服务</span></span><br><span class=\"line\"><span class=\"comment\"># 负载均衡的方式：https://mp.weixin.qq.com/s/yJyEwPkLD0V9G0451gbZYg</span></span><br><span class=\"line\"><span class=\"comment\"># 1.轮询；2.权重；3.ip_hash；4.fair；5.url_hash</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"时区\"><a href=\"#时区\" class=\"headerlink\" title=\"时区\"></a>时区</h3><pre><code>- https://blog.csdn.net/weixin_44109450/article/details/124259338\n- \n</code></pre>\n<h3 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h3><pre><code>sudo vim /etc/hosts\n140.82.112.4 github.com  \n199.232.69.194 github.global.ssl.fastly.net\n</code></pre>\n<h3 id=\"内网穿透\"><a href=\"#内网穿透\" class=\"headerlink\" title=\"内网穿透\"></a>内网穿透</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. https://doc.natfrp.com/#/frpc/service/systemd</span><br><span class=\"line\">2. </span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"青龙\"><a href=\"#青龙\" class=\"headerlink\" title=\"青龙\"></a>青龙</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入青龙容器</span><br><span class=\"line\">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"使用systemctl管理服务\"><a href=\"#使用systemctl管理服务\" class=\"headerlink\" title=\"使用systemctl管理服务\"></a>使用systemctl管理服务</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.jianshu.com/p/2deb0b79cb10</span><br><span class=\"line\"></span><br><span class=\"line\"># 路径</span><br><span class=\"line\">/etc/systemd/system</span><br><span class=\"line\"></span><br><span class=\"line\"># 日志</span><br><span class=\"line\">journalctl -u 服务名</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"Arthas\"><a href=\"#Arthas\" class=\"headerlink\" title=\"Arthas\"></a>Arthas</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://arthas.aliyun.com/doc/quick-start.html#_2-%E5%90%AF%E5%8A%A8-arthas</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[arthas@588425]$ watch net.lab1024.smartadmin.module.business.project.service.ProjectBaiscService queryProjects returnObj</span><br><span class=\"line\">Press Q or Ctrl+C to abort.</span><br><span class=\"line\">Affect(class count: 2 , method count: 2) cost in 170 ms, listenerId: 1</span><br><span class=\"line\">method=net.lab1024.smartadmin.module.business.project.service.ProjectBaiscService.queryProjects location=AtExit</span><br><span class=\"line\">ts=2022-11-28 20:11:49; [cost=37.212667ms] result=@ResponseDTO[</span><br><span class=\"line\">    code=@Integer[1],</span><br><span class=\"line\">    msg=@String[操作成功!],</span><br><span class=\"line\">    success=@Boolean[true],</span><br><span class=\"line\">    data=@ArrayList[isEmpty=false;size=13],</span><br><span class=\"line\">]</span><br><span class=\"line\">method=net.lab1024.smartadmin.module.business.project.service.ProjectBaiscService$$EnhancerBySpringCGLIB$$2f00139f.queryProjects location=AtExit</span><br><span class=\"line\">ts=2022-11-28 20:11:49; [cost=94.21994ms] result=@ResponseDTO[</span><br><span class=\"line\">    code=@Integer[1],</span><br><span class=\"line\">    msg=@String[操作成功!],</span><br><span class=\"line\">    success=@Boolean[true],</span><br><span class=\"line\">    data=@ArrayList[isEmpty=false;size=13],</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"Prometheus\"><a href=\"#Prometheus\" class=\"headerlink\" title=\"Prometheus\"></a>Prometheus</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># prometheus</span></span><br><span class=\"line\">wget https://github.com/prometheus/prometheus/releases/download/v2.40.4/prometheus-2.40.4.linux-amd64.tar.gz</span><br><span class=\"line\">tar -zxvf prometheus-2.40.4.linux-amd64.tar.gz</span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> prometheus-2.40.4.linux-amd64 /usr/local/prometheus</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">vim /usr/lib/systemd/system/prometheus.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=prometheus</span><br><span class=\"line\">After=network.target </span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">User=prometheus</span><br><span class=\"line\">Group=prometheus</span><br><span class=\"line\">WorkingDirectory=/usr/local/prometheus</span><br><span class=\"line\">ExecStart=/usr/local/prometheus/prometheus</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动并开启自启</span></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now prometheus\t\t\t\t\t\t\t\t\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "tags": [
                "系统集成"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/MySQL/",
            "url": "https://fairyeye.github.io/2023/06/05/MySQL/",
            "title": "",
            "date_published": "2023-06-05T01:28:10.951Z",
            "content_html": "<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tswid.OPERATION,</span><br><span class=\"line\">\tswid.DELIVERY_METHOD,</span><br><span class=\"line\">\tGROUP_CONCAT( DISTINCT( swid.WORK_ORDER_ID ) ) WORK_ORDER_ID </span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tSSME_WO_ISSUE_DETAIL swid </span><br><span class=\"line\">WHERE</span><br><span class=\"line\">\tswid.TENANT_ID = 4 </span><br><span class=\"line\">\tAND swid.WORK_ORDER_ID IN ( &#x27;42717.1&#x27;,&#x27;42719.1&#x27; ) </span><br><span class=\"line\">GROUP BY</span><br><span class=\"line\">\tswid.OPERATION,</span><br><span class=\"line\">\tswid.DELIVERY_METHOD</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://www.cnblogs.com/minqiliang/p/16577102.html\">https://www.cnblogs.com/minqiliang/p/16577102.html</a></p>\n<p><a href=\"https://blog.csdn.net/z15711187787/article/details/124986309\">https://blog.csdn.net/z15711187787/article/details/124986309</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_45994575/article/details/123071909?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-123071909-blog-123821186.t0_edu_mix&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-123071909-blog-123821186.t0_edu_mix&amp;utm_relevant_index=1\">https://blog.csdn.net/weixin_45994575/article/details/123071909?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-123071909-blog-123821186.t0_edu_mix&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-123071909-blog-123821186.t0_edu_mix&amp;utm_relevant_index=1</a></p>\n<p>部署记录</p>\n",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Nacos/",
            "url": "https://fairyeye.github.io/2023/06/05/Nacos/",
            "title": "",
            "date_published": "2023-06-05T01:28:10.951Z",
            "content_html": "<h3 id=\"配置中心\"><a href=\"#配置中心\" class=\"headerlink\" title=\"配置中心\"></a>配置中心</h3><h5 id=\"1-添加依赖\"><a href=\"#1-添加依赖\" class=\"headerlink\" title=\"1.添加依赖\"></a>1.添加依赖</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>nacos-config-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"2-启动类注解-NacosPropertySource\"><a href=\"#2-启动类注解-NacosPropertySource\" class=\"headerlink\" title=\"2.启动类注解 @NacosPropertySource\"></a>2.启动类注解 @NacosPropertySource</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span>  </span><br><span class=\"line\"><span class=\"comment\">// dataId 对应配置管理-配置列表-dataId</span></span><br><span class=\"line\"><span class=\"meta\">@NacosPropertySource(dataId = &quot;nacosDemo&quot;, autoRefreshed = true)</span>  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NacosDemoApplication</span> &#123;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;  </span><br><span class=\"line\">        SpringApplication.run(NacosDemoApplication.class, args);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-配置nacos地址\"><a href=\"#3-配置nacos地址\" class=\"headerlink\" title=\"3.配置nacos地址\"></a>3.配置nacos地址</h5><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span>  </span><br><span class=\"line\">    <span class=\"attr\">application:</span>  </span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nacos-demo</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"4-使用配置\"><a href=\"#4-使用配置\" class=\"headerlink\" title=\"4.使用配置\"></a>4.使用配置</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span>  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CacheController</span> &#123;  </span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"meta\">@NacosValue(value = &quot;$&#123;useLocalCache:false&#125;&quot;, autoRefreshed = true)</span>  </span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> useLocalCache;  </span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">template</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;useLocalCache is %s!&quot;</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"meta\">@GetMapping(&quot;/cache&quot;)</span>  </span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">cache</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">      <span class=\"comment\">// 默认返回false</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> String.format(template, useLocalCache);  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 此时返回结果 ：useLocalCache is false!</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>增加配置并发布</li>\n</ul>\n<p><img src=\"https://s3.uuu.ovh/imgs/2022/11/30/d17d85b8702c1cc8.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回结果 ：useLocalCache is true!</span></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Java%208%20Stream/",
            "url": "https://fairyeye.github.io/2023/06/05/Java%208%20Stream/",
            "title": "List stream",
            "date_published": "2023-06-05T01:28:10.950Z",
            "content_html": "<p>通过<code>workOrederNum</code>字段排序</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;ProduceOrderDTO&gt; collect = list.stream().sorted(Comparator.comparing(ProduceOrderDTO::getWorkOrderNum)).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n\n\n<p>查出<code>InstructionPoDTO</code>中<code>InstructionDocNum</code>作为list</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 筛选出不重复的 instructionDocNum</span></span><br><span class=\"line\">List&lt;String&gt; instructionDocNums = read.stream().map(InstructionPoDTO::getInstructionDocNum).distinct().collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n\n\n<p>筛选所有<code>instructionDocNum = 123</code>的对象 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;InstructionPoDTO&gt; instructionPoDTOS = read.stream().filter(instructionPoDTO -&gt;</span><br><span class=\"line\">     instructionPoDTO.getInstructionDocNum().equals(<span class=\"string\">&quot;123&quot;</span>)).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n\n\n<p>查询出第一个</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">instructionDocId</span> <span class=\"operator\">=</span> instructionDocs.stream().findFirst().get();</span><br></pre></td></tr></table></figure>\n\n\n\n<p>设置<code>typeCode</code>为key，<code>list</code>的对象为<code>value</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String, MtGenType&gt; typesMap = types.stream().collect(Collectors.toMap(t -&gt; t.getTypeCode(), t -&gt; t));</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>&#x2F;&#x2F; 通过字段去重</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">instructionSapStockDTOS.stream().collect(Collectors.collectingAndThen(Collectors.toCollection(()-&gt; new TreeSet&lt;&gt;(Comparator.comparing(o -&gt; o.getMaterial()+&quot;;&quot;+o.getPlant()+&quot;;&quot;+o.getStorage()+&quot;;&quot;+o.getBatch()+&quot;;&quot;+o.getSpecialStock()))), ArrayList::new));</span><br></pre></td></tr></table></figure>\n\n\n\n<p>GROUP BY</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String, List&lt;WmsIqcRecord&gt;&gt; map = records.stream().collect(Collectors.groupingBy(iqcRecord -&gt; &#123;</span><br><span class=\"line\">                    if (StringUtils.equals(&quot;TO_DO&quot;, iqcRecord.getStatus())) &#123;</span><br><span class=\"line\">                        switch (iqcRecord.getDealMethod()) &#123;</span><br><span class=\"line\">                            case &quot;RELEASE&quot;:</span><br><span class=\"line\">                                return &quot;TO_RELEASE&quot;;</span><br><span class=\"line\">                            case &quot;FREEZE&quot;:</span><br><span class=\"line\">                                return &quot;TO_FREEZE&quot;;</span><br><span class=\"line\">                            case &quot;RETURN&quot;:</span><br><span class=\"line\">                                return &quot;TO_RETURN&quot;;</span><br><span class=\"line\">                            default:</span><br><span class=\"line\">                                return &quot;TO_DO&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125; else if (StringUtils.equals(&quot;DONE&quot;, iqcRecord.getStatus())) &#123;</span><br><span class=\"line\">                        switch (iqcRecord.getDealMethod()) &#123;</span><br><span class=\"line\">                            case &quot;RELEASE&quot;:</span><br><span class=\"line\">                                return &quot;RELEASE_DONE&quot;;</span><br><span class=\"line\">                            case &quot;FREEZE&quot;:</span><br><span class=\"line\">                                return &quot;FREEZE_DONE&quot;;</span><br><span class=\"line\">                            case &quot;RETURN&quot;:</span><br><span class=\"line\">                                return &quot;RETURN_DONE&quot;;</span><br><span class=\"line\">                            default:</span><br><span class=\"line\">                                return &quot;DONE&quot;;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125; else &#123;</span><br><span class=\"line\">                        return &quot;DEAL&quot;;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;));</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//        List&lt;LocalDate&gt; collect = localDates.stream().sorted((var1, var2) -&gt; &#123;</span><br><span class=\"line\">//            if (var1.isBefore(var2)) &#123;</span><br><span class=\"line\">//                return -1;</span><br><span class=\"line\">//            &#125;</span><br><span class=\"line\">//            return 1;</span><br><span class=\"line\">//        &#125;).collect(Collectors.toList());</span><br><span class=\"line\">//        System.out.println(localDates.stream().sorted().collect(Collectors.toList()));</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Jmeter%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "url": "https://fairyeye.github.io/2023/06/05/Jmeter%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "title": "Jmeter",
            "date_published": "2023-06-05T01:28:10.950Z",
            "content_html": "<p><img data-src=\"https://i.loli.net/2021/08/18/7YTjKofu9SMPDWU.png\" alt=\"image-20210818195517502\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/08/18/hqIAWMJTpGnS4tB.png\" alt=\"image-20210818195538542\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/08/18/B73hXaVCULHQ4KN.png\" alt=\"image-20210818200759281\" /></p>\n",
            "tags": [
                "软件"
            ]
        },
        {
            "id": "https://fairyeye.github.io/2023/06/05/Mac%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81/",
            "url": "https://fairyeye.github.io/2023/06/05/Mac%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81/",
            "title": "Navicat数据库导出链接密码解析",
            "date_published": "2023-06-05T01:28:10.950Z",
            "content_html": "<p>参考：<a href=\"https://blog.csdn.net/harris_lele/article/details/123588127\">https://blog.csdn.net/harris_lele/article/details/123588127</a></p>\n<p>导出来，然后用php解析密码即可；</p>\n<p>在线运行php：</p>\n<p><code>https://www.toolfk.com/tools/online-runphp.html</code></p>\n<p>运行代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NavicatPassword</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$version</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$aesKey</span> = <span class=\"string\">&#x27;libcckeylibcckey&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$aesIv</span> = <span class=\"string\">&#x27;libcciv libcciv &#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$blowString</span> = <span class=\"string\">&#x27;3DC5CA39&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$blowKey</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$blowIv</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$version</span> = <span class=\"number\">12</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;version = <span class=\"variable\">$version</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;blowKey = <span class=\"title function_ invoke__\">sha1</span>(<span class=\"string\">&#x27;3DC5CA39&#x27;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;blowIv = <span class=\"title function_ invoke__\">hex2bin</span>(<span class=\"string\">&#x27;d9c7c3c8870d64bd&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encrypt</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = <span class=\"literal\">FALSE</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"variable language_\">$this</span>-&gt;version) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">11</span>:</span><br><span class=\"line\">                <span class=\"variable\">$result</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">encryptEleven</span>(<span class=\"variable\">$string</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">12</span>:</span><br><span class=\"line\">                <span class=\"variable\">$result</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">encryptTwelve</span>(<span class=\"variable\">$string</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$result</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encryptEleven</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$round</span> = <span class=\"title function_ invoke__\">intval</span>(<span class=\"title function_ invoke__\">floor</span>(<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$string</span>) / <span class=\"number\">8</span>));</span><br><span class=\"line\">        <span class=\"variable\">$leftLength</span> = <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$string</span>) % <span class=\"number\">8</span>;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$currentVector</span> = <span class=\"variable language_\">$this</span>-&gt;blowIv;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$round</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">encryptBlock</span>(<span class=\"variable\">$this</span>-&gt;<span class=\"title function_ invoke__\">xorBytes</span>(<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$string</span>, <span class=\"number\">8</span> * <span class=\"variable\">$i</span>, <span class=\"number\">8</span>), <span class=\"variable\">$currentVector</span>));</span><br><span class=\"line\">            <span class=\"variable\">$currentVector</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">xorBytes</span>(<span class=\"variable\">$currentVector</span>, <span class=\"variable\">$temp</span>);</span><br><span class=\"line\">            <span class=\"variable\">$result</span> .= <span class=\"variable\">$temp</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$leftLength</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$currentVector</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">encryptBlock</span>(<span class=\"variable\">$currentVector</span>);</span><br><span class=\"line\">            <span class=\"variable\">$result</span> .= <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">xorBytes</span>(<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$string</span>, <span class=\"number\">8</span> * <span class=\"variable\">$i</span>, <span class=\"variable\">$leftLength</span>), <span class=\"variable\">$currentVector</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">strtoupper</span>(<span class=\"title function_ invoke__\">bin2hex</span>(<span class=\"variable\">$result</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encryptBlock</span>(<span class=\"params\"><span class=\"variable\">$block</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">openssl_encrypt</span>(<span class=\"variable\">$block</span>, <span class=\"string\">&#x27;BF-ECB&#x27;</span>, <span class=\"variable\">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decryptBlock</span>(<span class=\"params\"><span class=\"variable\">$block</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">openssl_decrypt</span>(<span class=\"variable\">$block</span>, <span class=\"string\">&#x27;BF-ECB&#x27;</span>, <span class=\"variable\">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xorBytes</span>(<span class=\"params\"><span class=\"variable\">$str1</span>, <span class=\"variable\">$str2</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$str1</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$result</span> .= <span class=\"title function_ invoke__\">chr</span>(<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$str1</span>[<span class=\"variable\">$i</span>]) ^ <span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$str2</span>[<span class=\"variable\">$i</span>]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$result</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encryptTwelve</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = <span class=\"title function_ invoke__\">openssl_encrypt</span>(<span class=\"variable\">$string</span>, <span class=\"string\">&#x27;AES-128-CBC&#x27;</span>, <span class=\"variable\">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class=\"variable\">$this</span>-&gt;aesIv);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">strtoupper</span>(<span class=\"title function_ invoke__\">bin2hex</span>(<span class=\"variable\">$result</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decrypt</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = <span class=\"literal\">FALSE</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"variable language_\">$this</span>-&gt;version) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">11</span>:</span><br><span class=\"line\">                <span class=\"variable\">$result</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">decryptEleven</span>(<span class=\"variable\">$string</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">12</span>:</span><br><span class=\"line\">                <span class=\"variable\">$result</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">decryptTwelve</span>(<span class=\"variable\">$string</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$result</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decryptEleven</span>(<span class=\"params\"><span class=\"variable\">$upperString</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">hex2bin</span>(<span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$upperString</span>));</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"variable\">$round</span> = <span class=\"title function_ invoke__\">intval</span>(<span class=\"title function_ invoke__\">floor</span>(<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$string</span>) / <span class=\"number\">8</span>));</span><br><span class=\"line\">        <span class=\"variable\">$leftLength</span> = <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$string</span>) % <span class=\"number\">8</span>;</span><br><span class=\"line\">        <span class=\"variable\">$result</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable\">$currentVector</span> = <span class=\"variable language_\">$this</span>-&gt;blowIv;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$round</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$encryptedBlock</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$string</span>, <span class=\"number\">8</span> * <span class=\"variable\">$i</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">            <span class=\"variable\">$temp</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">xorBytes</span>(<span class=\"variable\">$this</span>-&gt;<span class=\"title function_ invoke__\">decryptBlock</span>(<span class=\"variable\">$encryptedBlock</span>), <span class=\"variable\">$currentVector</span>);</span><br><span class=\"line\">            <span class=\"variable\">$currentVector</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">xorBytes</span>(<span class=\"variable\">$currentVector</span>, <span class=\"variable\">$encryptedBlock</span>);</span><br><span class=\"line\">            <span class=\"variable\">$result</span> .= <span class=\"variable\">$temp</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$leftLength</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$currentVector</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">encryptBlock</span>(<span class=\"variable\">$currentVector</span>);</span><br><span class=\"line\">            <span class=\"variable\">$result</span> .= <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">xorBytes</span>(<span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$string</span>, <span class=\"number\">8</span> * <span class=\"variable\">$i</span>, <span class=\"variable\">$leftLength</span>), <span class=\"variable\">$currentVector</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$result</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decryptTwelve</span>(<span class=\"params\"><span class=\"variable\">$upperString</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">hex2bin</span>(<span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$upperString</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">openssl_decrypt</span>(<span class=\"variable\">$string</span>, <span class=\"string\">&#x27;AES-128-CBC&#x27;</span>, <span class=\"variable\">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class=\"variable\">$this</span>-&gt;aesIv);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//需要指定版本两种，11或12</span></span><br><span class=\"line\"><span class=\"comment\">//$navicatPassword = new NavicatPassword(11);</span></span><br><span class=\"line\"><span class=\"variable\">$navicatPassword</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">NavicatPassword</span>(<span class=\"number\">12</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//解密</span></span><br><span class=\"line\"><span class=\"comment\">//$decode = $navicatPassword-&gt;decrypt(&#x27;15057D7BA390&#x27;);</span></span><br><span class=\"line\"><span class=\"variable\">$decode</span> = <span class=\"variable\">$navicatPassword</span>-&gt;<span class=\"title function_ invoke__\">decrypt</span>(<span class=\"string\">&#x27;75008D0AE102C19EE3767E201AC9E4D2&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$decode</span>.<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "实用",
                "数据库"
            ]
        }
    ]
}